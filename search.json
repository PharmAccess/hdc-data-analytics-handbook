[
  {
    "objectID": "src/synthea.html",
    "href": "src/synthea.html",
    "title": "1 Synthea synthetic patient data",
    "section": "",
    "text": "The examples in this hand book are based on a synthetic patient dataset that was generated using the synthea patient generator. With this generator, it is possible to generate a patient population and associated health records in fhir format for a specific group op patients. For this handbook, we generated a dataset that includes mothers and the health records for their pregnancy journey.\n\n\n\nDownload Java 11 or newer\nThe synthea patient generator requires Java JDK 11 or newer, which can be downloaded here.\nPlace synthea generator in local directory\nDownload the synthea jar file and place it in a local directory.\nChange properties\nThe synthea generator has many properties, which are described in the common-configuration. Some examples are the fhir version to export, whether you want to export in bulk format, and which resources to include or exclude in the export. In the same folder where you placed the synthea jar file, also add a file called ‘synthea.properties’. In this file you can add the properties that you want to be different from the standard settings. In this example we canged only two properties:\n\n\n#change directory where to output the generated patient data\nexporter.baseDirectory = './data/synthea/'\n#create a json file per resource instead of per patient\nexported.fhir.bulk_data = TRUE \nTODO: Why do we choose bulk_data format??\n\n\n\nNow the synthea patient generator is ready for use, one can create the desired dataset by adjusting the properties and options. The synthea generator has a number of build in modules that simulate certain conditions, amongst which pregnancy. These modules can be selected by adding the option -m [module name], when you run the generator. A list with all modules can be found here.\nThe standard options for running the patient generator are described here.\nTo run the synthea generator:\n\nopen a terminal tab and navigate to the folder where the synthea jar file is stored. Alternatively, One can right click this folder and chose ‘open new terminal window with folder’.\nTo create a patient dataset for pregancy run the following command:\n\njava -jar synthea-with-dependencies.jar -c synthea.properties -p 1000 -g F -m Pregnancy\nwhere -p 1000 indicates a population of 1000 patients, -g F: that are female, -m: with pregnancy module.\nAfter running the synthea patient generator, the fhir resources can be found in the data/synthea/fhir folder."
  },
  {
    "objectID": "src/synthea.html#synthea-set-up",
    "href": "src/synthea.html#synthea-set-up",
    "title": "1 Synthea synthetic patient data",
    "section": "",
    "text": "Download Java 11 or newer\nThe synthea patient generator requires Java JDK 11 or newer, which can be downloaded here.\nPlace synthea generator in local directory\nDownload the synthea jar file and place it in a local directory.\nChange properties\nThe synthea generator has many properties, which are described in the common-configuration. Some examples are the fhir version to export, whether you want to export in bulk format, and which resources to include or exclude in the export. In the same folder where you placed the synthea jar file, also add a file called ‘synthea.properties’. In this file you can add the properties that you want to be different from the standard settings. In this example we canged only two properties:\n\n\n#change directory where to output the generated patient data\nexporter.baseDirectory = './data/synthea/'\n#create a json file per resource instead of per patient\nexported.fhir.bulk_data = TRUE \nTODO: Why do we choose bulk_data format??"
  },
  {
    "objectID": "src/synthea.html#usage",
    "href": "src/synthea.html#usage",
    "title": "1 Synthea synthetic patient data",
    "section": "",
    "text": "Now the synthea patient generator is ready for use, one can create the desired dataset by adjusting the properties and options. The synthea generator has a number of build in modules that simulate certain conditions, amongst which pregnancy. These modules can be selected by adding the option -m [module name], when you run the generator. A list with all modules can be found here.\nThe standard options for running the patient generator are described here.\nTo run the synthea generator:\n\nopen a terminal tab and navigate to the folder where the synthea jar file is stored. Alternatively, One can right click this folder and chose ‘open new terminal window with folder’.\nTo create a patient dataset for pregancy run the following command:\n\njava -jar synthea-with-dependencies.jar -c synthea.properties -p 1000 -g F -m Pregnancy\nwhere -p 1000 indicates a population of 1000 patients, -g F: that are female, -m: with pregnancy module.\nAfter running the synthea patient generator, the fhir resources can be found in the data/synthea/fhir folder."
  },
  {
    "objectID": "src/index.html",
    "href": "src/index.html",
    "title": "A health data commons based on the modern data stack",
    "section": "",
    "text": "Many organizations and jurisdictions struggle with the digital transformation of healthcare. In a recent analysis of the Dutch health information system, for example, the OECD concluded that several fundamental barriers need to be overcome, most notably the fragmentation of the health system. Paradoxically, fragmentation is a design feature intended to enable competition and market mechanisms to work, but at the same time presents an institutional barrier to data sharing and exchange. Fragmentation has particularly affected electronic medical data, where despite efforts toward data exchange, the data remain underdeveloped, siloed and underused. Lack of alignment and a common interpretation of legislation and regulations also present a challenge to advancing secure health data sharing, accessibility and use.\nThese challenges are not unique to the Dutch system, but are prevalent in many jurisdictions and regions. Initiatives such as the Lancet and Financial Times commission on governing health futures have laid out a development path to address these challenges. The concept of health data commons (HDC) is a key element in this approach where such commons are required\n\nto be build within a governance architecture that creates trust in digital health by enfranchising patients and vulnerable groups, ensuring health and digital rights, and regulating powerful players in the digital health ecosystem;\nto support a new approach to the collection and use of health data based on the concept of data solidarity, with the aim of simultaneously protecting individual rights, promoting the public good potential of such data, and building a culture of data justice and equity;\nto be designed in such a way to be conducive to strong ownership of digital health strategies and clear investment roadmaps that help prioritize those technologies that are most needed at different levels of digital health maturity.\n\nDespite the challenges, we want to demonstrate that patient-centric data access and reuse is feasible, today. We take the approach of “show, don’t tell”. Through implementing demonstrator projects that contribute towards the creation of a Health Data Commons (HDC), we show that health data sharing can be achieved in LMICs at acceptable cost and low technical risk. This document describes the learnings from the HDC project. Through these demonstrators we aim to initiate a paradigm shift as to how data sharing can be realized such that it can act as a catalyst towards achieving UHC.\nIn this handbook, we provide a detailed technical description of a solution design for a HDC based on the OpenHIE framework. This handbook aims to address professionals in the area of health informatics, data analytics and data architecure."
  },
  {
    "objectID": "src/index.html#the-need-for-a-health-data-commons",
    "href": "src/index.html#the-need-for-a-health-data-commons",
    "title": "A health data commons based on the modern data stack",
    "section": "",
    "text": "Many organizations and jurisdictions struggle with the digital transformation of healthcare. In a recent analysis of the Dutch health information system, for example, the OECD concluded that several fundamental barriers need to be overcome, most notably the fragmentation of the health system. Paradoxically, fragmentation is a design feature intended to enable competition and market mechanisms to work, but at the same time presents an institutional barrier to data sharing and exchange. Fragmentation has particularly affected electronic medical data, where despite efforts toward data exchange, the data remain underdeveloped, siloed and underused. Lack of alignment and a common interpretation of legislation and regulations also present a challenge to advancing secure health data sharing, accessibility and use.\nThese challenges are not unique to the Dutch system, but are prevalent in many jurisdictions and regions. Initiatives such as the Lancet and Financial Times commission on governing health futures have laid out a development path to address these challenges. The concept of health data commons (HDC) is a key element in this approach where such commons are required\n\nto be build within a governance architecture that creates trust in digital health by enfranchising patients and vulnerable groups, ensuring health and digital rights, and regulating powerful players in the digital health ecosystem;\nto support a new approach to the collection and use of health data based on the concept of data solidarity, with the aim of simultaneously protecting individual rights, promoting the public good potential of such data, and building a culture of data justice and equity;\nto be designed in such a way to be conducive to strong ownership of digital health strategies and clear investment roadmaps that help prioritize those technologies that are most needed at different levels of digital health maturity.\n\nDespite the challenges, we want to demonstrate that patient-centric data access and reuse is feasible, today. We take the approach of “show, don’t tell”. Through implementing demonstrator projects that contribute towards the creation of a Health Data Commons (HDC), we show that health data sharing can be achieved in LMICs at acceptable cost and low technical risk. This document describes the learnings from the HDC project. Through these demonstrators we aim to initiate a paradigm shift as to how data sharing can be realized such that it can act as a catalyst towards achieving UHC.\nIn this handbook, we provide a detailed technical description of a solution design for a HDC based on the OpenHIE framework. This handbook aims to address professionals in the area of health informatics, data analytics and data architecure."
  },
  {
    "objectID": "src/index.html#the-openhie-framework",
    "href": "src/index.html#the-openhie-framework",
    "title": "A health data commons based on the modern data stack",
    "section": "the OpenHIE framework",
    "text": "the OpenHIE framework\n\n\n\nFigure 1: OpenHIE framework\n\n\nThe HDC project takes the openHIE framework1 as a starting point, being the most generic and commonly used health information interoperability framework. This framework has by and large been adopted by sub-Saharan African countries2, including Nigeria3, Kenya4 and Tanzania.5\nThe HDC framework and its components are shown in figure 1. The bottom layer (yellow) comprises the point of service (PoS) systems, which includes the systems used by clinicians, health professionals, community health workers and the like. Examples of such systems are OpenMRS electronic medical records (EMR) system and the RapidSMS mHealth application, which are used to access and update a patient’s records, register activities and record healthcare transactions.\nThe second, middle layer (teal) constitutes the interoperablity layer (IOL), which acts as a gateway for exchanging information between systems. Any type of information exchange, be it between two PoS systems, or between a PoS system and business services (explained below), is mediated through this interoperability layer. The interoperability layer provides functionality such as routing, translation services, auditing and authentication.\nThe top layer of framework comprises three distinct domains. Common Services (blue) include a variety of registry services that are designed to uniquely identify and track unique patients, facilities, healthcare products, and terminology that are used throughout the health data commons. Business Service (green) are designed to support the delivery of care within the health system. The District Health Information System version 2, for example, is a well-known and widely used Health Management Information System for collecting, analyzing, visualizing and sharing data through combinining data from multiple PoS systems for a given geography or jurisdiction.6\nThe HDC framework explicitly adds a third domain in the top layer, which is not included in the OpenHIE specification, namely Analytics & Intelligence Services (light blue). The rationale for this addition is to facilitate secondary use of health data for academic research, real-world evidence studies etc. within the nascent concept of health data spaces.7 Note that the Kenyan Health Information Systems Interoperability Framework (KHISIF) has also explicitly included the analytics domain."
  },
  {
    "objectID": "src/index.html#footnotes",
    "href": "src/index.html#footnotes",
    "title": "A health data commons based on the modern data stack",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nohie.org↩︎\nMamuye et al. (2022)↩︎\nNigeria data exchange architecture for the national data repository↩︎\nKHISIF↩︎\n“Tanzania Health Enterprise Architecture” (2020)↩︎\nDHIS2↩︎\nsee for example the International Data Spaces Association↩︎"
  },
  {
    "objectID": "src/about.html",
    "href": "src/about.html",
    "title": "About",
    "section": "",
    "text": "About this site"
  },
  {
    "objectID": "src/duckdb.html",
    "href": "src/duckdb.html",
    "title": "Create views using DuckDB",
    "section": "",
    "text": "The synthea generator generates fhir data in json format. The fhir data has a nested structure which can be challenging for analysis. For that reason we create a flattened view based on the different fhir resources, that can be used for further analysis. In this handbook we create a patient_timeline, including all procedures that a woman had in her pregnancy journey."
  },
  {
    "objectID": "src/duckdb.html#what-is-duckdb",
    "href": "src/duckdb.html#what-is-duckdb",
    "title": "Create views using DuckDB",
    "section": "What is duckDB?",
    "text": "What is duckDB?\nDuckDB is an open-source database known for its fast query processing. It supports SQl and nested datastructures like Fhir."
  },
  {
    "objectID": "src/duckdb.html#installing-and-importing-data-in-duckdb",
    "href": "src/duckdb.html#installing-and-importing-data-in-duckdb",
    "title": "Create views using DuckDB",
    "section": "Installing and importing data in duckDB",
    "text": "Installing and importing data in duckDB\nFirst install DuckDB.\nThen import the library:\n\nimport duckdb\nfrom pathlib import Path\n\nNow we can import the fhir data in duckdb as follows:\nTo use DuckDB, we first need to create a connection to a database. To do so we need to give a parameter that refers to a database (duckdb) file. If the file already exists,, duckdb connects to that file, if not a new file will be generated and connected to. The file extension can be anything, but usually .db or .duckdb are used.\nside note: when working with schemas a duckdb file can become large rapidly. For that reason in this notebook two duckdb files were created: one in which all raw data and manipulations are stored and has multiple schemas and one in which only the outcome is stored, which will be much smaller in size.\n\nCreating and connecting to duckdb databases\n\n# we setup a data storage schema following the Medallion structure\n# https://www.databricks.com/glossary/medallion-architecture#:~:text=A%20medallion%20architecture%20is%20a,Silver%20%E2%87%92%20Gold%20layer%20tables).\n\n# define where data is stored\n\n# ROOT = Path(__file__).resolve().parent\n# ROOT = quarto.project.root\n\n\nROOT = Path('.')\nif 'src' in str(ROOT.resolve()): # locally\n    ROOT = '..' / ROOT # go one folder up\nBRONZE = ROOT / 'data' / 'bronze'\nSILVER = ROOT / 'data' / 'silver'\nSYNTHEA_DUMP = ROOT /'data'/'bronze'/'synthea'/'fhir'\n\nconnection_bronze = duckdb.connect(f\"{BRONZE}/raw.duckdb\")\nconnection_silver = duckdb.connect(f\"{SILVER}/pregnancy.duckdb\")\n\nwe are now connected to our duckdb databases, and can run any SQL commands on them.\n\n\nSET up duckdb database and import fhir data\nFirst, we can create a schema structure in the database, in this example we use a medallion database structure where the raw fhir data is stored in the BRONZE layer.\n\nschema_list = ['bronze','silver','gold']\nfor schema in schema_list: \n    connection_bronze.sql(f'create schema if not exists {schema}')\n\nNow, we import the fhir data from the ndjson fhir resources into the duckdb database. DuckDB allows you to directly read the data from the ndjson files.\n\nschema = 'bronze'\n# loop through the different resources, note that the numbers behind organization, practitioner, location, etc. will be different for each set of generated Synthea data.\nresource_list = ['DiagnosticReport','Claim','Provenance','ExplanationOfBenefit','DocumentReference','Encounter','Patient','Organization.1693914717904','Location.1693914717904','Immunization','Practitioner.1693914717904','PractitionerRole.1693914717904']\n\nfor resource in resource_list:\n    resource_table_name = resource.split('.')[0] # get rid of number behind resource name\n    connection_bronze.sql(f\"create table if not exists {schema}.{resource_table_name} as select * from '{SYNTHEA_DUMP}/{resource}.ndjson'\")\n\nTo check if all resources are present we can check the information_schema:\n\n#check if all resources are present\nconnection_bronze.sql(f\"select * from information_schema.tables\").to_df()\n\n\n\n\n\n\n\n\ntable_catalog\ntable_schema\ntable_name\ntable_type\nself_referencing_column_name\nreference_generation\nuser_defined_type_catalog\nuser_defined_type_schema\nuser_defined_type_name\nis_insertable_into\nis_typed\ncommit_action\n\n\n\n\n0\nraw\nbronze\nDiagnosticReport\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n1\nraw\nbronze\nClaim\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n2\nraw\nbronze\nProvenance\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n3\nraw\nbronze\nExplanationOfBenefit\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n4\nraw\nbronze\nDocumentReference\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n5\nraw\nbronze\nEncounter\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n6\nraw\nbronze\nPatient\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n7\nraw\nbronze\nOrganization\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n8\nraw\nbronze\nLocation\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n9\nraw\nbronze\nImmunization\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n10\nraw\nbronze\nPractitioner\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n11\nraw\nbronze\nPractitionerRole\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n12\nraw\nsilver\nprice_list\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n13\nraw\nsilver\npatient_timeline\nBASE TABLE\nNaN\nNaN\nNaN\nNaN\nNaN\nYES\nNO\nNone\n\n\n\n\n\n\n\n\n\nExport data to parquest files\nUsing parquet files enables us to separate storage and compute. This provides us with the flexibility to (for example) scale out storage engine, or change our compute backend, without affecting the other.\n\n\n\n\n\n\n\nstorage_compute\n\n  \n\nstorage\n\n storage   \n\ncompute\n\n compute   \n\nstorage–compute\n\n  \n\n\n\n\n\nIn addition, parquet files require less space than duckdb files.\nOne can convert each table separately to a parquet file, which is shown below.\n\nresource_list = ['DiagnosticReport','Claim','Provenance','ExplanationOfBenefit','DocumentReference','Encounter','Patient','Organization','Location','Immunization','Practitioner','PractitionerRole']\n#check if all resources are present\nfor resource in resource_list: \n    connection_bronze.sql(f\"COPY bronze.{resource} TO '{BRONZE}/parquet/{resource}.parquet' (FORMAT PARQUET)\")\n\nIt is also possible to do a database export in parquet format. a load.sql and schema.sql file are then also available, to make it easy to import the data at once in duckdb.\n\nconnection_bronze.sql(f\"EXPORT DATABASE '{BRONZE}/parquet_export' (FORMAT PARQUET);\")\n\nIt can be observed that the size of the parquet files (16.5 MB) is smaller than the size of the duckdb file (18.5 MB). Both duckdb and parquet file formats are significantly smaller in size than the ndjson files, which take up 146.5 MB in total.\n\n\nInvestigating Nested structures\nFhir data has a nested structure. This can be observed by looking at the Claim data as an example:\n\nconnection_bronze.sql('select * from bronze.Claim limit 1').to_df()\n\n\n\n\n\n\n\n\nresourceType\nid\nstatus\ntype\nuse\npatient\nbillablePeriod\ncreated\nprovider\npriority\nfacility\nsupportingInfo\ninsurance\nitem\ntotal\n\n\n\n\n0\nClaim\n105a1262-aef1-422c-837e-b12b907dfeac\nactive\n{'coding': [{'system': 'http://terminology.hl7...\nclaim\n{'reference': 'Patient/884c04fc-2b31-c9c0-51b8...\n{'start': '2014-05-25T13:57:31+02:00', 'end': ...\n2014-05-25T14:12:31+02:00\n{'reference': 'Organization?identifier=https:/...\n{'coding': [{'system': 'http://terminology.hl7...\n{'reference': 'Location?identifier=https://git...\n[{'sequence': 1, 'category': {'coding': [{'sys...\n[{'sequence': 1, 'focal': True, 'coverage': {'...\n[{'sequence': 1, 'productOrService': {'coding'...\n{'value': 272.8, 'currency': 'USD'}\n\n\n\n\n\n\n\nLet’s obsere the data in item\n\nconnection_bronze.sql('select * from bronze.Claim limit 1').to_df()['item'][0]\n\n[{'sequence': 1,\n  'productOrService': {'coding': [{'system': 'http://snomed.info/sct',\n     'code': '410620009',\n     'display': 'Well child visit (procedure)'}],\n   'text': 'Well child visit (procedure)'},\n  'encounter': [{'reference': 'Encounter/a6b75b4c-0cfa-f85e-a317-33420c73b34b'}],\n  'informationSequence': None,\n  'net': None},\n {'sequence': 2,\n  'productOrService': {'coding': [{'system': 'http://hl7.org/fhir/sid/cvx',\n     'code': '140',\n     'display': 'Influenza, seasonal, injectable, preservative free'}],\n   'text': 'Influenza, seasonal, injectable, preservative free'},\n  'encounter': None,\n  'informationSequence': [1],\n  'net': {'value': 136.0, 'currency': 'USD'}}]\n\n\nIt can be observed that an item is a list of procedures/products with a price. Within one list item under the productOrService, we can find another list in which the coding is specified.\nTo deal with this nested structure, the unnest() and struct_extract() functions are frequently used.\nLet’s try to create a list of the claims where each productOrService of a claim is on a new line. To do so, a cross join can be used to merge the results with the original table.\n\nquery = '''\nSelect \nc.patient.reference, \nstruct_extract(i,'productOrService') as productOrService\nfrom bronze.Claim c\ncross join (SELECT UNNEST(item)i)\n'''\nconnection_bronze.sql(query).to_df()\n\n\n\n\n\n\n\n\nreference\nproductOrService\n\n\n\n\n0\nPatient/884c04fc-2b31-c9c0-51b8-3909e34ee92f\n{'coding': [{'system': 'http://snomed.info/sct...\n\n\n1\nPatient/884c04fc-2b31-c9c0-51b8-3909e34ee92f\n{'coding': [{'system': 'http://hl7.org/fhir/si...\n\n\n2\nPatient/71d269a3-d04c-727d-c5bc-aaaff28e16b4\n{'coding': [{'system': 'http://snomed.info/sct...\n\n\n3\nPatient/71d269a3-d04c-727d-c5bc-aaaff28e16b4\n{'coding': [{'system': 'http://hl7.org/fhir/si...\n\n\n4\nPatient/f9133ee8-f952-0e7d-f642-99d84fc9c6ad\n{'coding': [{'system': 'http://snomed.info/sct...\n\n\n...\n...\n...\n\n\n22662\nPatient/f7a1f5c2-825b-8c93-82f0-16cc44e19fdd\n{'coding': [{'system': 'http://hl7.org/fhir/si...\n\n\n22663\nPatient/f7a1f5c2-825b-8c93-82f0-16cc44e19fdd\n{'coding': [{'system': 'http://snomed.info/sct...\n\n\n22664\nPatient/f7a1f5c2-825b-8c93-82f0-16cc44e19fdd\n{'coding': [{'system': 'http://hl7.org/fhir/si...\n\n\n22665\nPatient/f7a1f5c2-825b-8c93-82f0-16cc44e19fdd\n{'coding': [{'system': 'http://snomed.info/sct...\n\n\n22666\nPatient/f7a1f5c2-825b-8c93-82f0-16cc44e19fdd\n{'coding': [{'system': 'http://hl7.org/fhir/si...\n\n\n\n\n22667 rows × 2 columns\n\n\n\n\n\nCreate flattened tables to use for data wrangling\nFirst, let’s create a pricelist from the claims data\n\nquery = '''\ncreate table if not exists silver.price_list as(\n        Select \n        distinct\n        struct_extract(codes,'code') as code,\n        case\n            when struct_extract(codes,'system') like '%snomed%' then 'SNOMED'\n            when struct_extract(codes,'system') like '%cvx%' then 'CVX'\n            else NULL \n        end as system,\n        struct_extract(codes,'display') as item_claimed,\n        struct_extract(struct_extract(i,'net'),'value') as USD\n\n\n        from \n        bronze.Claim c\n        cross join (SELECT unnest(item) i)\n        cross join (SELECT unnest(struct_extract(struct_extract(i,'productOrService'),'coding')) codes)\n    );\n\nSelect * from silver.price_list limit 5\n'''\nconnection_bronze.sql(query).to_df()\n\n\n\n\n\n\n\n\ncode\nsystem\nitem_claimed\nUSD\n\n\n\n\n0\n119\nCVX\nrotavirus, monovalent\n136.0\n\n\n1\n62\nCVX\nHPV, quadrivalent\n136.0\n\n\n2\n140\nCVX\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n3\n43\nCVX\nHep B, adult\n136.0\n\n\n4\n207\nCVX\nSARS-COV-2 (COVID-19) vaccine, mRNA, spike pro...\n136.0\n\n\n\n\n\n\n\nWe also want to create a table that contains all encounters of the patient, information about the patient, and all vaccinations the patient required in one table.\n\nquery ='''\ncreate or replace table silver.patient_timeline as(\n    with patient_info as(\n        Select \n            cast(p.id as string) as patient_id, -- both pandas and byspark dont allow the UUID type (FIXED_BYTE_LEN_ARRAY in parquet)therefore the UUID is converted into string\n            struct_extract(i,'value') as social_security_number,\n            struct_extract(n,'prefix')[1] as prefix,\n            struct_extract(n,'given')[1] as first_name,\n            struct_extract(n,'family') as last_name,\n            p.birthDate\n        from bronze.Patient p\n        cross join (SELECT unnest(p.identifier) i)\n        cross join (SELECT unnest(p.name) n)\n        where struct_extract(n,'use') = 'official'\n        and struct_extract(i,'system') = 'http://hl7.org/fhir/sid/us-ssn'\n    ),\n    encounter_info as(\n        Select \n            e.id as encounter_id,\n            struct_extract(c,'code') as code,\n            'SNOMED' as system,\n            struct_extract(c,'display') as procedure_name,\n            str_split(e.subject.reference,'/')[2] as patient_id,\n            str_split(e.serviceProvider.reference,'synthea|')[-1] as organization_id,\n            e.serviceProvider.display as organization_name,\n            struct_extract(struct_extract(p,'individual'),'display') as practitioner_name,\n            str_split(struct_extract(struct_extract(p,'individual'),'reference'),'us-npi|')[-1] as practitioner_id,\n            e.period.start as start_time,\n            e.period.end as end_time    \n        from bronze.encounter e\n        cross join (SELECT unnest(e.type) t)\n        cross join (SELECT unnest(t.coding) c)\n        cross join (SELECT unnest(e.participant) p)\n        where struct_extract(c,'system') = 'http://snomed.info/sct'\n    ),\n    immunization_info as(\n        Select \n            i.id as immunization_id,\n            i.vaccineCode.text as Vaccine_name,\n            struct_extract(vc,'code') as code,\n            'CVX' as system,\n            str_split(i.patient.reference,'/')[2] as patient_id,\n            str_split(i.encounter.reference,'/')[2] as encounter_id\n        from \n        bronze.Immunization i\n        cross join (SELECT unnest(vaccineCode.coding) vc)\n        where struct_extract(vc,'system') = 'http://hl7.org/fhir/sid/cvx'\n    ),\n    price_list as (\n        Select \n            distinct\n            struct_extract(codes,'code') as code,\n            case\n                when struct_extract(codes,'system') like '%snomed%' then 'SNOMED'\n                when struct_extract(codes,'system') like '%cvx%' then 'CVX'\n                else NULL \n            end as system,\n            struct_extract(codes,'display') as item_claimed,\n            struct_extract(struct_extract(i,'net'),'value') as USD\n        from \n        bronze.Claim c\n        cross join (SELECT unnest(item) i)\n        cross join (SELECT unnest(struct_extract(struct_extract(i,'productOrService'),'coding')) codes)\n    )\n    Select \n    p.*,\n    e.code,\n    e.system,\n    e.organization_id,\n    e.organization_name,\n    e.practitioner_name,\n    e.practitioner_id,\n    e.procedure_name,\n    e.start_time,\n    e.end_time,\n    i.vaccine_name,\n    i.code as vaccine_code,\n    i.system as vaccine_code_system\n    from patient_info p\n    join encounter_info e on p.patient_id = e.patient_id\n    left join immunization_info i on i.encounter_id = e.encounter_id and e.patient_id = p.patient_id\n);\n\nselect * from silver.patient_timeline limit 5\n    \n'''\nconnection_bronze.sql(query).to_df()\n\n\n\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\nDr. Homero668 Rolón954\n9999962894\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\nDr. Maren639 Aufderhar910\n9999950790\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\nDr. Salvador46 Homenick806\n9999977496\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n\n\n\n\n\n\n\nExport the outcome in a separate duckdb file\nAs the database now becomes big in size, we extract the patient_timeline and pricelist into another duckdb. This decreases the size from 20.5MB to 2.9MB.\n\n# first extract tables into a dataframe\nprice_list = connection_bronze.sql('Select * from silver.price_list').to_df()\ntimeline = connection_bronze.sql('Select * from silver.patient_timeline').to_df()\n\n\n# load from dataframe into SILVER database\nconnection_silver.sql('create or replace table price_list as select * from price_list')\n\nconnection_silver.sql('create or replace table patient_timeline as select * from timeline')\n\nconnection_silver.sql('Select * from patient_timeline limit 5').to_df()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\nDr. Homero668 Rolón954\n9999962894\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\nDr. Maren639 Aufderhar910\n9999950790\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\nDr. Salvador46 Homenick806\n9999977496\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n\n\n\n\n\n\n\nExport results in parquet files\nAgain to minimize storage space, we convert the duckdb file to parquet files. The size decreases from 2.9 MB to 550kB.\n\n# Export database to parquet files\nconnection_silver.sql(f\"EXPORT DATABASE '{SILVER}/parquet_export' (FORMAT PARQUET);\")\n\n\n\nClose the database connection\nWhen you finish your analysis always make sure to close the duckdb connection. You can only have one duckdb connection at a time.\n\nconnection_silver.close()\nconnection_bronze.close()"
  },
  {
    "objectID": "src/duckdb.html#sql-on-fhir",
    "href": "src/duckdb.html#sql-on-fhir",
    "title": "Create views using DuckDB",
    "section": "1 SQL on FHIR",
    "text": "1 SQL on FHIR\nTODO In this document we created our own standardized tables: the patient_timeline and the pricelist table.\nSQL on FHIR is a project that deals with handling fhir resources in SQL exosystems that do not accept the nested FHIR structures. In this project rules are set up and guidelines are given as to how to flatten the fhir resources into tabular views. In this project a Columnar Schema Guidance is written."
  },
  {
    "objectID": "src/data-wrangling-libraries.html",
    "href": "src/data-wrangling-libraries.html",
    "title": "Datawrangling",
    "section": "",
    "text": "In data analysis, we often repeat similar actions to get valuable information from the data. In this Chapter we describe the most common techniques applied in data analysis, and how they are performed in different programming languages and libraries."
  },
  {
    "objectID": "src/data-wrangling-libraries.html#split-apply-combine",
    "href": "src/data-wrangling-libraries.html#split-apply-combine",
    "title": "Datawrangling",
    "section": "1 Split-apply-combine",
    "text": "1 Split-apply-combine\nMany data analysis problems involve the application of a split-apply-combine strategy, where you break up a big problem into manageable pieces, operate on each piece independently and then put all the pieces back together. group_by is the most common function name for split-apply-combine technique.\nThese actions can be done with any library, in multiple programming languages. Based on the sample data created in Synthea patient generator and Create views using DuckDB, we will go through some standard data analysis actions. We will show how to apply these actions in multiple libraries and languages."
  },
  {
    "objectID": "src/data-wrangling-libraries.html#datawrangling-languages-and-libraries",
    "href": "src/data-wrangling-libraries.html#datawrangling-languages-and-libraries",
    "title": "Datawrangling",
    "section": "2 Datawrangling languages and libraries",
    "text": "2 Datawrangling languages and libraries\nIn this chapter we use the following languages and libraries:\nPandas 2.0\nPandas is a popular python data wrangling library in the data science comunity. Pandas 2.0 mainly introduces improvements in performance, making it faster and more memory-efficient.\nPolars\nPolars is very similar to pandas in terms of functionality. However, polars is based on Rust, which makes it highly performant.\nIBIS\nIbis is a python library which enables you to write your code in a pandas-like way, and the translates it to a lot of different backends. This enables you to change backends with only minor adjustments to your data wrangling code.\nPySpark PySpark is a python library for Apache Spark, an open source computing system. It enables you to work with large datasets, or run complex calculations.\ndplyr\ndplyr is a widely used library in r.\nSQL - DuckDB\nIn this handbook we use DuckDB to show how to perform datawrangling with SQL. DuckDB SQL is almost the same as plane SQL but has a couple of extra functions to handle nested data and a couple of functions that help with data analysis. DuckDB is TODO"
  },
  {
    "objectID": "src/data-wrangling-libraries.html#overview-data-transformations-in-different-libraries",
    "href": "src/data-wrangling-libraries.html#overview-data-transformations-in-different-libraries",
    "title": "Datawrangling",
    "section": "3 Overview data transformations in different libraries",
    "text": "3 Overview data transformations in different libraries\nIn the table below, you can find an overview of techniques that are often used in data analysis and the corresponding functions for them in the discussed libraries/languages.\n\n\n\n\n\n\n\n\n\n\n\n\nconcept\npandas\nPolars\nIBIS\nPySpark\ndplyr\nSQL\n\n\n\n\nSplit\ngroupby()\ngroup_by()\ngroup_by()\ngroupBy()\ngroup_by()\nGROUP BY\n\n\nApply\nmany functions\nmany functions\nmany functions\nmany functions\nmany functions\nmany functions\n\n\ncombine\njoin (), merge()\njoin()\nleft_join, inner_join() etc.\njoin()\nleft_join, inner_join() etc.\nLEFT JOIN, JOIN etc.\n\n\nFiltering (row based)\nloc[], query()\nfilter()\nfilter()\nfilter()\nfilter()\nWHERE\n\n\nFiltering (column based)\nloc[], iloc[],\nselect()\n-\nselect()\nselect()\nSELECT\n\n\nMutate\nassign()\nwith_columns()\nmutuate()\nwithColumn()\nmutate()\nADD\n\n\nOrdering\nsort_values()\nsort()\norder_by()\norderBy()\narrange()\nORDER BY"
  },
  {
    "objectID": "src/data-wrangling-libraries.html#example-using-the-synthea-dataset",
    "href": "src/data-wrangling-libraries.html#example-using-the-synthea-dataset",
    "title": "Datawrangling",
    "section": "4 Example using the Synthea dataset",
    "text": "4 Example using the Synthea dataset\nTo demonstrate the most common data analysis techniques in the different languages and libraries, we use the data generated with the Synthea Patient Generator.\n\nload required libraries\nBefore getting started, we need to load the required libraries.\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\nimport pandas as pd\n\n\n\n\nimport polars as pl\n\n\n\n\nimport duckdb\n\n\n\n\nimport ibis \nimport pandas as pd\nimport duckdb\n\n\n\n\nimport pyspark\nfrom pyspark.sql import SparkSession\nfrom pyspark.sql.types import StructType,StructField, StringType, DateType,TimestampType,IntegerType\nfrom pyspark.sql import functions as F\n\n\n\n\n%load_ext rpy2.ipython\n\n\n%%R\nlibrary(DBI)\nlibrary(dplyr)\nlibrary(duckdb)\nlibrary(glue)\nlibrary(lubridate)\nlibrary(knitr)\n\n\nAttaching package: ‘dplyr’\n\nThe following objects are masked from ‘package:stats’:\n\n    filter, lag\n\nThe following objects are masked from ‘package:base’:\n\n    intersect, setdiff, setequal, union\n\n\nAttaching package: ‘lubridate’\n\nThe following objects are masked from ‘package:base’:\n\n    date, intersect, setdiff, union\n\n\n\n\n\n\n\n\nRetrieve data\nIn this section we will retrieve the data from the parquet files created in Creating views with DuckDB.\nFirst, we set the paths where the data is located\n\nPythonR\n\n\n\nfrom pathlib import Path\nROOT = Path('.')\nif 'src' in str(ROOT.resolve()): # locally\n    ROOT = '..' / ROOT # go one folder up\nBRONZE = ROOT / 'data' / 'bronze'\nSILVER = ROOT / 'data' / 'silver'\n\n\n\n\n%%R\nlibrary(here)\n\nROOT &lt;- here()\n\n\n# Check if the 'src' directory is in the path and adjust the ROOT if needed\nif (grepl(\"src\", ROOT, fixed = TRUE)) {\n  ROOT &lt;- dirname(ROOT)\n}\n\n# Define BRONZE and SILVER directories\nBRONZE &lt;- file.path(ROOT, \"data\", \"bronze\")\nSILVER &lt;- file.path(ROOT, \"data\", \"silver\")\n\nhere() starts at /home/runner/work/hdc-data-analytics-handbook/hdc-data-analytics-handbook\n\n\n\n\n\nThereafter, we import the data in a dataframe\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\n# load data from parquet\ndf_timeline_pandas = pd.read_parquet(f\"{SILVER}/parquet_export/patient_timeline.parquet\")\ndf_price_list_pandas = pd.read_parquet(f\"{SILVER}/parquet_export/price_list.parquet\")\n\n\n\n\n# read parquet files in polars dateframe\ndf_timeline_polars = pl.read_parquet(f\"{SILVER}/parquet_export/patient_timeline.parquet\")\ndf_price_list_polars = pl.read_parquet(f\"{SILVER}/parquet_export/price_list.parquet\")\n\n\n\nIn Creating views using DuckDB, we already showed how to create a DuckDB database and read in parquet data in duckdb. Therefore we will connect here to the already created database with soley the patient_timeline and price_list table available.\n\n# connect to the database\ncon_duckdb = duckdb.connect()\n\ncon_duckdb.sql(\n    f\"\"\"\n    CREATE TABLE patient_timeline AS\n    SELECT *\n    FROM read_parquet('{SILVER}/parquet_export/patient_timeline.parquet');\n    \"\"\"\n)\n\ncon_duckdb.sql(\n    f\"\"\"\n    CREATE TABLE price_list AS\n    SELECT *\n    FROM read_parquet('{SILVER}/parquet_export/price_list.parquet');\n    \"\"\"\n)\n\n\n\nTODO Show that this is also possible directly on parquet files\n\n# read parquet files with ibis\ndf_timeline_IBIS = ibis.read_parquet(f'{SILVER}/parquet_export/patient_timeline.parquet')\ndf_price_list_ibis = ibis.read_parquet(f'{SILVER}/parquet_export/price_list.parquet')\n\n\n\n\n# create spark session\nspark = SparkSession.builder.appName(\"patient_timeline_analysis\").getOrCreate()\n\n# convert timeline to spark dataframe\ndf_timeline_spark = spark.read.parquet(f'{SILVER}/parquet_export/patient_timeline.parquet')\n\n# convert pricelist to spark dataframe\ndf_price_list_spark = spark.read.parquet(f'{SILVER}/parquet_export/price_list.parquet')\n\nSetting default log level to \"WARN\".\nTo adjust logging level use sc.setLogLevel(newLevel). For SparkR, use setLogLevel(newLevel).\n23/12/18 15:02:24 WARN NativeCodeLoader: Unable to load native-hadoop library for your platform... using builtin-java classes where applicable\n\n\n\n\n\n%%R\ncon &lt;- dbConnect(\n  duckdb::duckdb(),\n  dbdir = glue(\"{SILVER}/pregnancy.duckdb\"),\n  read_only = TRUE\n)\n\n\n%%R\ndf &lt;- dbGetQuery(con, \"SELECT * FROM patient_timeline\")\ndf_price_list &lt;- dbGetQuery(con, \"SELECT * FROM price_list\")\n\nIn addition: Warning message:\nIn rapi_execute(res@stmt_lst$ref, res@arrow, res@connection@driver@bigint ==  :\n  Coercing nanoseconds to a lower resolution may result in a loss of data.\n\n\n\n\n\n\n\nSplit-apply-combine\nFrom the patient timeline data, we want to know how many patients each organization has recorded. For this task we can use the split-apply-combine technique.\n\nwe split the data in groups, where each group is a organization\nwe apply a function to count the number of patients in the group\nwe combine the data back together again\n\n\npandaspolarsSQLIBISpysparkdplyr\n\n\nIn the code below, we can see that the groupby function splits the data into different groups (and later combines them again). the agg function applies an aggregation, in this case the unique count of patients in the group. There are a few more actions in this code, renaming the index to organization, and the patient_id column to # patients.\n\ndf_grouped_pandas = df_timeline_pandas.groupby(\"organization_name\").agg(\n    {\"patient_id\":pd.Series.nunique}\n).rename(\n    columns = {'patient_id':\"# patients\"}\n).rename_axis('organization')\n\n# show first 5 records \ndf_grouped_pandas.head()\n\n\n\n\n\n\n\n\n# patients\n\n\norganization\n\n\n\n\n\n4499 ACUSHNET AVENUE OPERATING COMPANY, LLC\n5\n\n\nA&A HEALTHCARE LLC\n9\n\n\nACCESS PRIMARY CARE INC\n1\n\n\nACHIEVE WELLNESS, LLC\n3\n\n\nACTIVATED BY WELLNESS LLC\n5\n\n\n\n\n\n\n\n\n\n\ndf_grouped_polars = (\n    df_timeline_polars\n    .group_by(\"organization_name\")\n    .agg(\n        pl.n_unique(\"patient_id\")\n    )\n)\nprint(df_grouped_polars.head())\n\nshape: (5, 2)\n┌───────────────────────────────────┬────────────┐\n│ organization_name                 ┆ patient_id │\n│ ---                               ┆ ---        │\n│ str                               ┆ u32        │\n╞═══════════════════════════════════╪════════════╡\n│ BAYSTATE MEDICAL CENTER           ┆ 7          │\n│ ENCOMPASS HEALTH REHABILITATION … ┆ 12         │\n│ CHILD & FAMILY SERVICES, INC.     ┆ 3          │\n│ EVERGREEN WELLNESS CENTER, LLC    ┆ 2          │\n│ SPAULDING HOSPITAL FOR CONTINUIN… ┆ 10         │\n└───────────────────────────────────┴────────────┘\n\n\nPolars supports both lazy and non-lazy (eager) evaluation. Lazy evaluation means that execution is deferred to the last minute, which can have significant performance advantages.\n\ndf_grouped_polars = (\n    df_timeline_polars.lazy()\n    .group_by(\"organization_name\")\n    .agg(\n        pl.n_unique(\"patient_id\")\n    )\n    .collect()\n)\nprint(df_grouped_polars)\n\nshape: (352, 2)\n┌───────────────────────────────────┬────────────┐\n│ organization_name                 ┆ patient_id │\n│ ---                               ┆ ---        │\n│ str                               ┆ u32        │\n╞═══════════════════════════════════╪════════════╡\n│ SUN MEDICAL CLINIC, PC            ┆ 5          │\n│ COMMUNITY HEALTH CONNECTIONS      ┆ 1          │\n│ ORLEANS MEDICAL CENTER, P.C.      ┆ 1          │\n│ PLYMOUTH FAMILY OPTOMETRY LLC     ┆ 1          │\n│ …                                 ┆ …          │\n│ COMMUNITY HEALTH CENTER OF FRANK… ┆ 1          │\n│ NASHOBA VALLEY MEDICAL CENTER     ┆ 9          │\n│ FAMILY MEDICAL ASSOCIATES, P.C.   ┆ 2          │\n│ LYNN COMMUNITY HEALTH             ┆ 4          │\n└───────────────────────────────────┴────────────┘\n\n\n\n\n\nquery = f\"\"\"\ncreate or replace table organization_grouped as (\n    select \n        organization_name as organization,\n        count(distinct patient_id) as patient_count\n    from patient_timeline\n    group by organization_name\n) ;\nselect * from organization_grouped \nlimit 5;\n\n\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\norganization\npatient_count\n\n\n\n\n0\nFOLEY FAMILY PRACTICE, P.C.\n1\n\n\n1\nBEDFORD-LEXINGTON INTERNAL MEDICINE, PC\n3\n\n\n2\nARBOUR-FULLER HOSPITAL\n13\n\n\n3\nPERSONAL PRIMARY CARE AND WEIGHT MANAGEMENT, LLC\n1\n\n\n4\nMELROSE FAMILY OPTICIANS LLC\n4\n\n\n\n\n\n\n\n\n\n\ndf_grouped_ibis = df_timeline_IBIS.group_by(\"organization_name\").aggregate(df_timeline_IBIS.patient_id.nunique()).to_pandas()\ndf_grouped_ibis.head()\n\n\n\n\n\n\n\n\norganization_name\nCountDistinct(patient_id)\n\n\n\n\n0\nVIBRA HOSPITAL OF WESTERN MASS - CENTRAL CAMPUS\n10\n\n\n1\nGIFFORD STREET WELLNESS CENTER LLC\n6\n\n\n2\nBOSTON MEDICAL CENTER CORPORATION-\n29\n\n\n3\nEMERSON HOSPITAL\n9\n\n\n4\nORLEANS MEDICAL CENTER, P.C.\n1\n\n\n\n\n\n\n\n\ndf_grouped_ibis = df_timeline_IBIS.group_by(\"organization_name\").aggregate(df_timeline_IBIS.patient_id.nunique())\nibis.show_sql(df_grouped_ibis)\n\nSELECT\n  t0.organization_name,\n  COUNT(DISTINCT t0.patient_id) AS \"CountDistinct(patient_id)\"\nFROM _ibis_read_parquet_hcaoggcnprespppaffnnrd4nau AS t0\nGROUP BY\n  1\n\n\n\n\n\n#option 1, using buid in functions\ndf_grouped_pyspark = df_timeline_spark.groupBy('organization_name').agg(\n        F.countDistinct('patient_id'\n    ).alias('# patients')).orderBy(\n        '# patients',ascending = False\n    )\n\ndf_grouped_pyspark = df_grouped_pyspark.withColumnRenamed(\"organization_name\", \"organization\")\n\n# option 2: using SQL \ndf_timeline_spark.createOrReplaceTempView(\"timeline\")\ndf_grouped_pyspark = spark.sql('''\nSelect \n    organization_name, \n    count(distinct patient_id) as nr_of_patients \nfrom timeline group by organization_name \norder by count(distinct patient_id) DESC\n''')\n\ndf_grouped_pyspark.limit(5).show()\n\n+--------------------+--------------+\n|   organization_name|nr_of_patients|\n+--------------------+--------------+\n|BOSTON MEDICAL CE...|            29|\n|WHITLEY WELLNESS LLC|            29|\n|  TEWKSBURY HOSPITAL|            26|\n|CAPE COD HOSPITAL...|            25|\n|HARBOR HEALTH SER...|            23|\n+--------------------+--------------+\n\n\n\n\n\n\n%%R\ndf_grouped &lt;- df %&gt;% \n  group_by(organization_name) %&gt;%\n  summarise(\n    number_of_patients = n_distinct(patient_id),\n    .groups = \"drop\"\n  )\nkable(head(df_grouped))\n\n\n\n|organization_name                           | number_of_patients|\n|:-------------------------------------------|------------------:|\n|4499 ACUSHNET AVENUE OPERATING COMPANY, LLC |                  5|\n|A&A HEALTHCARE LLC                          |                  9|\n|ACCESS PRIMARY CARE INC                     |                  1|\n|ACHIEVE WELLNESS, LLC                       |                  3|\n|ACTIVATED BY WELLNESS LLC                   |                  5|\n|ADVANTAGE HEALTH & WELLNESS INC             |                  2|\n\n\n\n\n\n\n\nFilter\nIn data analysis it also frequently occurs that you are interested in only a subset of the data. For that reason we apply the filter technique. From our patients we only want to keep the well child visits.\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\n# option 1\nvalue = 'Well child visit (procedure)'\ndf_filtered_pandas = df_timeline_pandas[df_timeline_pandas['procedure_name'] == value]\n\n# option 2\ndf_filtered_pandas = df_timeline_pandas.loc[df_timeline_pandas['procedure_name'] == value]\n\n# option 3\ndf_filtered_pandas = df_filtered_pandas.query(f\"procedure_name == '{value}' \")\n\n#show results\ndf_filtered_pandas[['patient_id','start_time','procedure_name']].head()\n\n\n\n\n\n\n\n\npatient_id\nstart_time\nprocedure_name\n\n\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n2016-04-01T04:09:48+02:00\nWell child visit (procedure)\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n2022-01-07T02:19:02+01:00\nWell child visit (procedure)\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n2014-08-18T14:52:06+02:00\nWell child visit (procedure)\n\n\n5\n3a2311a7-eb30-2aae-59c0-55ae273d1581\n2016-11-01T04:38:02+01:00\nWell child visit (procedure)\n\n\n6\nf9133ee8-f952-0e7d-f642-99d84fc9c6ad\n2014-06-03T20:31:52+02:00\nWell child visit (procedure)\n\n\n\n\n\n\n\n\n\n\ndf_filtered_polars = (\n    df_timeline_polars\n    .filter(pl.col(\"procedure_name\") == \"Well child visit (procedure)\")\n)\nprint(df_filtered_polars.head())\n\nshape: (5, 18)\n┌────────────┬────────────┬────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ patient_id ┆ social_sec ┆ prefix ┆ first_nam ┆ … ┆ end_time  ┆ Vaccine_n ┆ vaccine_c ┆ vaccine_c │\n│ ---        ┆ urity_numb ┆ ---    ┆ e         ┆   ┆ ---       ┆ ame       ┆ ode       ┆ ode_syste │\n│ str        ┆ er         ┆ str    ┆ ---       ┆   ┆ str       ┆ ---       ┆ ---       ┆ m         │\n│            ┆ ---        ┆        ┆ str       ┆   ┆           ┆ str       ┆ str       ┆ ---       │\n│            ┆ str        ┆        ┆           ┆   ┆           ┆           ┆           ┆ str       │\n╞════════════╪════════════╪════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ fca8d2ca-7 ┆ 999-24-859 ┆ null   ┆ Marlen929 ┆ … ┆ 2016-04-0 ┆ Hep B,    ┆ 08        ┆ CVX       │\n│ aef-2c27-3 ┆ 9          ┆        ┆           ┆   ┆ 1T04:24:4 ┆ adolescen ┆           ┆           │\n│ bba-3f9472 ┆            ┆        ┆           ┆   ┆ 8+02:00   ┆ t or      ┆           ┆           │\n│ 30…        ┆            ┆        ┆           ┆   ┆           ┆ pediatric ┆           ┆           │\n│ 19936964-a ┆ 999-33-797 ┆ null   ┆ Monique14 ┆ … ┆ 2022-01-0 ┆ Hep B,    ┆ 08        ┆ CVX       │\n│ 432-d501-2 ┆ 4          ┆        ┆ 8         ┆   ┆ 7T02:34:0 ┆ adolescen ┆           ┆           │\n│ cd5-fa52db ┆            ┆        ┆           ┆   ┆ 2+01:00   ┆ t or      ┆           ┆           │\n│ 6b…        ┆            ┆        ┆           ┆   ┆           ┆ pediatric ┆           ┆           │\n│ 0d016955-2 ┆ 999-47-850 ┆ Ms.    ┆ Tracy345  ┆ … ┆ 2014-08-1 ┆ Influenza ┆ 140       ┆ CVX       │\n│ 6db-966c-3 ┆ 0          ┆        ┆           ┆   ┆ 8T15:07:0 ┆ ,         ┆           ┆           │\n│ d52-26d441 ┆            ┆        ┆           ┆   ┆ 6+02:00   ┆ seasonal, ┆           ┆           │\n│ bf…        ┆            ┆        ┆           ┆   ┆           ┆ injectabl ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆           ┆ e,…       ┆           ┆           │\n│ 3a2311a7-e ┆ 999-40-608 ┆ null   ┆ Janene3   ┆ … ┆ 2016-11-0 ┆ Hep B,    ┆ 08        ┆ CVX       │\n│ b30-2aae-5 ┆ 4          ┆        ┆           ┆   ┆ 1T04:53:0 ┆ adolescen ┆           ┆           │\n│ 9c0-55ae27 ┆            ┆        ┆           ┆   ┆ 2+01:00   ┆ t or      ┆           ┆           │\n│ 3d…        ┆            ┆        ┆           ┆   ┆           ┆ pediatric ┆           ┆           │\n│ f9133ee8-f ┆ 999-93-354 ┆ Ms.    ┆ Ozie87    ┆ … ┆ 2014-06-0 ┆ Influenza ┆ 140       ┆ CVX       │\n│ 952-0e7d-f ┆ 6          ┆        ┆           ┆   ┆ 3T20:46:5 ┆ ,         ┆           ┆           │\n│ 642-99d84f ┆            ┆        ┆           ┆   ┆ 2+02:00   ┆ seasonal, ┆           ┆           │\n│ c9…        ┆            ┆        ┆           ┆   ┆           ┆ injectabl ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆           ┆ e,…       ┆           ┆           │\n└────────────┴────────────┴────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n\n\n\n\n\nquery = \"\"\"\ncreate or replace table filtered_table as (\n    Select \n        * \n    from patient_timeline \n    where procedure_name = 'Well child visit (procedure)'\n);\nselect * from filtered_table limit 5;\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\nDr. Homero668 Rolón954\n9999962894\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n1\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\nDr. Maren639 Aufderhar910\n9999950790\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n2\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\nDr. Salvador46 Homenick806\n9999977496\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n3\n3a2311a7-eb30-2aae-59c0-55ae273d1581\n999-40-6084\nNone\nJanene3\nHowe413\n2016-11-01\n410620009\nSNOMED\n2e8b42f8-4300-30a9-a576-d513d1021a0a\nGREATER LOWELL FAMILY PRACTICE PC\nDr. Homero668 Salcedo309\n9999959890\nWell child visit (procedure)\n2016-11-01T04:38:02+01:00\n2016-11-01T04:53:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n4\nf9133ee8-f952-0e7d-f642-99d84fc9c6ad\n999-93-3546\nMs.\nOzie87\nNitzsche158\n1998-04-21\n410620009\nSNOMED\n0e9d0119-1157-35a0-8bb5-7e0aa3041928\nCARING HEALTH CENTER, INC\nDr. Kari181 Trantow673\n9999979997\nWell child visit (procedure)\n2014-06-03T20:31:52+02:00\n2014-06-03T20:46:52+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n\n\n\n\n\n\n\n\ndf_filtered_ibis = df_timeline_IBIS.filter(df_timeline_IBIS.procedure_name == \"Well child visit (procedure)\")\ndf_filtered_ibis.to_pandas().head()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\nDr. Homero668 Rolón954\n9999962894\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n1\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\nDr. Maren639 Aufderhar910\n9999950790\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n2\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\nDr. Salvador46 Homenick806\n9999977496\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n3\n3a2311a7-eb30-2aae-59c0-55ae273d1581\n999-40-6084\nNone\nJanene3\nHowe413\n2016-11-01\n410620009\nSNOMED\n2e8b42f8-4300-30a9-a576-d513d1021a0a\nGREATER LOWELL FAMILY PRACTICE PC\nDr. Homero668 Salcedo309\n9999959890\nWell child visit (procedure)\n2016-11-01T04:38:02+01:00\n2016-11-01T04:53:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n4\nf9133ee8-f952-0e7d-f642-99d84fc9c6ad\n999-93-3546\nMs.\nOzie87\nNitzsche158\n1998-04-21\n410620009\nSNOMED\n0e9d0119-1157-35a0-8bb5-7e0aa3041928\nCARING HEALTH CENTER, INC\nDr. Kari181 Trantow673\n9999979997\nWell child visit (procedure)\n2014-06-03T20:31:52+02:00\n2014-06-03T20:46:52+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n\n\n\n\n\n\n\n\n# option 1\nvalue = 'Well child visit (procedure)'\ndf_filtered_pyspark = df_timeline_spark.filter(df_timeline_spark['procedure_name']==value)\n\n# option 2\ndf_filtered_pyspark = df_timeline_spark.filter(F.expr(f\"procedure_name == '{value}'\"))\n\n# option 3 - sql\ndf_timeline_spark.createOrReplaceTempView(\"timeline\")\ndf_filtered_pyspark = spark.sql(f\"Select * from timeline where procedure_name =='{value}'\")\n\n#show results\ndf_filtered_pyspark[['patient_id','start_time','procedure_name']].limit(5).show()\n\n+--------------------+--------------------+--------------------+\n|          patient_id|          start_time|      procedure_name|\n+--------------------+--------------------+--------------------+\n|fca8d2ca-7aef-2c2...|2016-04-01T04:09:...|Well child visit ...|\n|19936964-a432-d50...|2022-01-07T02:19:...|Well child visit ...|\n|0d016955-26db-966...|2014-08-18T14:52:...|Well child visit ...|\n|3a2311a7-eb30-2aa...|2016-11-01T04:38:...|Well child visit ...|\n|f9133ee8-f952-0e7...|2014-06-03T20:31:...|Well child visit ...|\n+--------------------+--------------------+--------------------+\n\n\n\n\n\n\n%%R\ndf_filtered &lt;- df %&gt;%\n  filter(procedure_name == \"Well child visit (procedure)\")\nkable(head(df_filtered))\n\n\n\n|patient_id                           |social_security_number |prefix |first_name |last_name    |birthDate  |      code|system |organization_id                      |organization_name                               |practitioner_name          |practitioner_id |procedure_name               |start_time                |end_time                  |Vaccine_name                                       |vaccine_code |vaccine_code_system |\n|:------------------------------------|:----------------------|:------|:----------|:------------|:----------|---------:|:------|:------------------------------------|:-----------------------------------------------|:--------------------------|:---------------|:----------------------------|:-------------------------|:-------------------------|:--------------------------------------------------|:------------|:-------------------|\n|fca8d2ca-7aef-2c27-3bba-3f94723012f5 |999-24-8599            |NA     |Marlen929  |Greenholt190 |2016-04-01 | 410620009|SNOMED |3f12ebb4-e03c-3453-88d2-4fc9682383df |NEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC |Dr. Homero668 Rolón954     |9999962894      |Well child visit (procedure) |2016-04-01T04:09:48+02:00 |2016-04-01T04:24:48+02:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n|19936964-a432-d501-2cd5-fa52db6b9f41 |999-33-7974            |NA     |Monique148 |Haley279     |2022-01-07 | 410620009|SNOMED |c6b019eb-28ec-36f6-abf3-bcc4d1d58966 |DUTTON FAMILY CARE ASSOCIATES LLP               |Dr. Maren639 Aufderhar910  |9999950790      |Well child visit (procedure) |2022-01-07T02:19:02+01:00 |2022-01-07T02:34:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n|0d016955-26db-966c-3d52-26d441bfcb97 |999-47-8500            |Ms.    |Tracy345   |Smith67      |2000-07-17 | 410620009|SNOMED |39c15c0f-5c49-311e-99d2-1fb99d80e06e |HARBOR HEALTH SERVICES INC                      |Dr. Salvador46 Homenick806 |9999977496      |Well child visit (procedure) |2014-08-18T14:52:06+02:00 |2014-08-18T15:07:06+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |\n|3a2311a7-eb30-2aae-59c0-55ae273d1581 |999-40-6084            |NA     |Janene3    |Howe413      |2016-11-01 | 410620009|SNOMED |2e8b42f8-4300-30a9-a576-d513d1021a0a |GREATER LOWELL FAMILY PRACTICE PC               |Dr. Homero668 Salcedo309   |9999959890      |Well child visit (procedure) |2016-11-01T04:38:02+01:00 |2016-11-01T04:53:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n|f9133ee8-f952-0e7d-f642-99d84fc9c6ad |999-93-3546            |Ms.    |Ozie87     |Nitzsche158  |1998-04-21 | 410620009|SNOMED |0e9d0119-1157-35a0-8bb5-7e0aa3041928 |CARING HEALTH CENTER, INC                       |Dr. Kari181 Trantow673     |9999979997      |Well child visit (procedure) |2014-06-03T20:31:52+02:00 |2014-06-03T20:46:52+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |\n|f9133ee8-f952-0e7d-f642-99d84fc9c6ad |999-93-3546            |Ms.    |Ozie87     |Nitzsche158  |1998-04-21 | 410620009|SNOMED |0e9d0119-1157-35a0-8bb5-7e0aa3041928 |CARING HEALTH CENTER, INC                       |Dr. Kari181 Trantow673     |9999979997      |Well child visit (procedure) |2014-06-03T20:31:52+02:00 |2014-06-03T20:46:52+02:00 |meningococcal MCV4P                                |114          |CVX                 |\n\n\nIn addition: Warning message:\nDatabase is garbage-collected, use dbDisconnect(con, shutdown=TRUE) or duckdb::duckdb_shutdown(drv) to avoid this. \n\n\n\n\n\nBesides filtering data by content it is also possible to filter the columns one wishes to show\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\ndf_filtered_pandas.filter(items = ['patient_id','birthDate','organization_name']).head(1)\n\n\n\n\n\n\n\n\npatient_id\nbirthDate\norganization_name\n\n\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n2016-04-01\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\n\n\n\n\n\n\n\n\ndf_filtered_pandas[['patient_id','birthDate','organization_name']].head(1)\n\n\n\n\n\n\n\n\npatient_id\nbirthDate\norganization_name\n\n\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n2016-04-01\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\n\n\n\n\n\n\n\n\n\n\ndf_filtered_polars.select([\n    pl.col(\"patient_id\"), pl.col(\"birthDate\"), pl.col(\"organization_name\")\n]).head()\n\n\nshape: (5, 3)\n\n\n\npatient_id\nbirthDate\norganization_name\n\n\nstr\ndatetime[μs]\nstr\n\n\n\n\n\"fca8d2ca-7aef-…\n2016-04-01 00:00:00\n\"NEW BEDFORD IN…\n\n\n\"19936964-a432-…\n2022-01-07 00:00:00\n\"DUTTON FAMILY …\n\n\n\"0d016955-26db-…\n2000-07-17 00:00:00\n\"HARBOR HEALTH …\n\n\n\"3a2311a7-eb30-…\n2016-11-01 00:00:00\n\"GREATER LOWELL…\n\n\n\"f9133ee8-f952-…\n1998-04-21 00:00:00\n\"CARING HEALTH …\n\n\n\n\n\n\n\n\n\nquery = \"\"\"\nSelect \n    patient_id,\n    birthDate,\n    organization_name\nfrom patient_timeline limit 1\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\npatient_id\nbirthDate\norganization_name\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n1965-01-07\nHOLYOKE HEALTH CENTER INC\n\n\n\n\n\n\n\n\n\n\ndf_filtered_ibis.select(\n    'patient_id','birthDate','organization_name'\n).to_pandas().head()\n\n\n\n\n\n\n\n\npatient_id\nbirthDate\norganization_name\n\n\n\n\n0\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n2016-04-01\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\n\n\n1\n19936964-a432-d501-2cd5-fa52db6b9f41\n2022-01-07\nDUTTON FAMILY CARE ASSOCIATES LLP\n\n\n2\n0d016955-26db-966c-3d52-26d441bfcb97\n2000-07-17\nHARBOR HEALTH SERVICES INC\n\n\n3\n3a2311a7-eb30-2aae-59c0-55ae273d1581\n2016-11-01\nGREATER LOWELL FAMILY PRACTICE PC\n\n\n4\nf9133ee8-f952-0e7d-f642-99d84fc9c6ad\n1998-04-21\nCARING HEALTH CENTER, INC\n\n\n\n\n\n\n\n\n\n\ndf_filtered_pyspark.select('patient_id','birthDate','organization_name').limit(1).show()\n\n+--------------------+-------------------+--------------------+\n|          patient_id|          birthDate|   organization_name|\n+--------------------+-------------------+--------------------+\n|fca8d2ca-7aef-2c2...|2016-04-01 00:00:00|NEW BEDFORD INTER...|\n+--------------------+-------------------+--------------------+\n\n\n\n\n\n\n#TODO\n\n\n\n\n\n\nMutate\nAnother common action, is that you want create adapt data. For example, we want to create another column with the year that a visit occured in the patient timeline, based on the start_time that is available. We see that currently the date is in a specific timezone, you need to take this into account when converting it in a datatime format. For now we keep the date in the same timezone, before extracting the year from it.\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\n# transform start_time to datetime (its currently string format)\ndf_timeline_pandas['start_time'] = pd.to_datetime(df_timeline_pandas['start_time'], utc=  True)\ndf_timeline_pandas['start_time'].dtype\n\n#option 1\ndf_timeline_pandas['year'] = df_timeline_pandas['start_time'].dt.year\n\n#option 2\ndf_timeline_pandas = df_timeline_pandas.assign(year=df_timeline_pandas['start_time'].dt.year )\n\ndf_timeline_pandas[['start_time','year']].head(1)\n\n\n\n\n\n\n\n\nstart_time\nyear\n\n\n\n\n0\n2015-01-08 06:11:47+00:00\n2015\n\n\n\n\n\n\n\n\n\n\ndf_new_var_polars = (\n    df_timeline_polars\n    .with_columns(\n        pl.col(\"start_time\").str.to_datetime(format=\"%Y-%m-%dT%H:%M:%S%z\")\n        .dt.year().alias(\"start_year\")\n    )\n)\nprint(df_new_var_polars.head())\n\nshape: (5, 19)\n┌────────────┬────────────┬────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ patient_id ┆ social_sec ┆ prefix ┆ first_nam ┆ … ┆ Vaccine_n ┆ vaccine_c ┆ vaccine_c ┆ start_yea │\n│ ---        ┆ urity_numb ┆ ---    ┆ e         ┆   ┆ ame       ┆ ode       ┆ ode_syste ┆ r         │\n│ str        ┆ er         ┆ str    ┆ ---       ┆   ┆ ---       ┆ ---       ┆ m         ┆ ---       │\n│            ┆ ---        ┆        ┆ str       ┆   ┆ str       ┆ str       ┆ ---       ┆ i32       │\n│            ┆ str        ┆        ┆           ┆   ┆           ┆           ┆ str       ┆           │\n╞════════════╪════════════╪════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 4fc244f3-2 ┆ 999-53-581 ┆ Mrs.   ┆ Alyce744  ┆ … ┆ zoster    ┆ 121       ┆ CVX       ┆ 2015      │\n│ c0e-4017-d ┆ 3          ┆        ┆           ┆   ┆ vaccine,  ┆           ┆           ┆           │\n│ 64d-c2c4cd ┆            ┆        ┆           ┆   ┆ live      ┆           ┆           ┆           │\n│ 03…        ┆            ┆        ┆           ┆   ┆           ┆           ┆           ┆           │\n│ 4fc244f3-2 ┆ 999-53-581 ┆ Mrs.   ┆ Alyce744  ┆ … ┆ Influenza ┆ 140       ┆ CVX       ┆ 2015      │\n│ c0e-4017-d ┆ 3          ┆        ┆           ┆   ┆ ,         ┆           ┆           ┆           │\n│ 64d-c2c4cd ┆            ┆        ┆           ┆   ┆ seasonal, ┆           ┆           ┆           │\n│ 03…        ┆            ┆        ┆           ┆   ┆ injectabl ┆           ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆ e,…       ┆           ┆           ┆           │\n│ fca8d2ca-7 ┆ 999-24-859 ┆ null   ┆ Marlen929 ┆ … ┆ Hep B,    ┆ 08        ┆ CVX       ┆ 2016      │\n│ aef-2c27-3 ┆ 9          ┆        ┆           ┆   ┆ adolescen ┆           ┆           ┆           │\n│ bba-3f9472 ┆            ┆        ┆           ┆   ┆ t or      ┆           ┆           ┆           │\n│ 30…        ┆            ┆        ┆           ┆   ┆ pediatric ┆           ┆           ┆           │\n│ 19936964-a ┆ 999-33-797 ┆ null   ┆ Monique14 ┆ … ┆ Hep B,    ┆ 08        ┆ CVX       ┆ 2022      │\n│ 432-d501-2 ┆ 4          ┆        ┆ 8         ┆   ┆ adolescen ┆           ┆           ┆           │\n│ cd5-fa52db ┆            ┆        ┆           ┆   ┆ t or      ┆           ┆           ┆           │\n│ 6b…        ┆            ┆        ┆           ┆   ┆ pediatric ┆           ┆           ┆           │\n│ 0d016955-2 ┆ 999-47-850 ┆ Ms.    ┆ Tracy345  ┆ … ┆ Influenza ┆ 140       ┆ CVX       ┆ 2014      │\n│ 6db-966c-3 ┆ 0          ┆        ┆           ┆   ┆ ,         ┆           ┆           ┆           │\n│ d52-26d441 ┆            ┆        ┆           ┆   ┆ seasonal, ┆           ┆           ┆           │\n│ bf…        ┆            ┆        ┆           ┆   ┆ injectabl ┆           ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆ e,…       ┆           ┆           ┆           │\n└────────────┴────────────┴────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n\n\n\n\n\nquery = \"\"\"\nSelect\n    cast(start_time as datetime) as start_time,\n    year(cast(start_time as datetime)) as year\nfrom patient_timeline;\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\nstart_time\nyear\n\n\n\n\n0\n2015-01-08 06:11:47\n2015\n\n\n1\n2015-01-08 06:11:47\n2015\n\n\n2\n2016-04-01 02:09:48\n2016\n\n\n3\n2022-01-07 01:19:02\n2022\n\n\n4\n2014-08-18 12:52:06\n2014\n\n\n...\n...\n...\n\n\n13832\n2019-07-24 02:17:26\n2019\n\n\n13833\n2020-07-29 02:17:26\n2020\n\n\n13834\n2021-08-04 02:17:26\n2021\n\n\n13835\n2022-08-10 02:17:26\n2022\n\n\n13836\n2023-08-16 02:17:26\n2023\n\n\n\n\n13837 rows × 2 columns\n\n\n\n\n\n\ndf_new_var_ibis = df_timeline_IBIS.mutate(start_year=df_timeline_IBIS.start_time.cast(\"timestamp\").year()).to_pandas()\ndf_new_var_ibis.head()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\nstart_year\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n2015\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n2015\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\nDr. Homero668 Rolón954\n9999962894\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n2016\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\nDr. Maren639 Aufderhar910\n9999950790\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n2022\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\nDr. Salvador46 Homenick806\n9999977496\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n2014\n\n\n\n\n\n\n\n\n\n\n# transform start_time to datetime (its currently string format)\ndf_timeline_spark = df_timeline_spark.withColumn(\"start_time\", F.to_utc_timestamp(df_timeline_spark[\"start_time\"], \"Europe/Amsterdam\"))\n\ndf_timeline_spark = df_timeline_spark.withColumn(\"year\", F.year(df_timeline_spark[\"start_time\"]))\ndf_timeline_spark.select('start_time','year').limit(3).show()\n\n+-------------------+----+\n|         start_time|year|\n+-------------------+----+\n|2015-01-08 05:11:47|2015|\n|2015-01-08 05:11:47|2015|\n|2016-04-01 00:09:48|2016|\n+-------------------+----+\n\n\n\n\n\n\n%%R\ndf_new_var &lt;- df %&gt;%\n  mutate(start_year = year(as.Date(start_time, format = \"%Y-%m-%d\")))\nkable(head(df_new_var))\n\n\n\n|patient_id                           |social_security_number |prefix |first_name |last_name    |birthDate  |      code|system |organization_id                      |organization_name                               |practitioner_name          |practitioner_id |procedure_name                             |start_time                |end_time                  |Vaccine_name                                       |vaccine_code |vaccine_code_system | start_year|\n|:------------------------------------|:----------------------|:------|:----------|:------------|:----------|---------:|:------|:------------------------------------|:-----------------------------------------------|:--------------------------|:---------------|:------------------------------------------|:-------------------------|:-------------------------|:--------------------------------------------------|:------------|:-------------------|----------:|\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |zoster vaccine, live                               |121          |CVX                 |       2015|\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |       2015|\n|fca8d2ca-7aef-2c27-3bba-3f94723012f5 |999-24-8599            |NA     |Marlen929  |Greenholt190 |2016-04-01 | 410620009|SNOMED |3f12ebb4-e03c-3453-88d2-4fc9682383df |NEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC |Dr. Homero668 Rolón954     |9999962894      |Well child visit (procedure)               |2016-04-01T04:09:48+02:00 |2016-04-01T04:24:48+02:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |       2016|\n|19936964-a432-d501-2cd5-fa52db6b9f41 |999-33-7974            |NA     |Monique148 |Haley279     |2022-01-07 | 410620009|SNOMED |c6b019eb-28ec-36f6-abf3-bcc4d1d58966 |DUTTON FAMILY CARE ASSOCIATES LLP               |Dr. Maren639 Aufderhar910  |9999950790      |Well child visit (procedure)               |2022-01-07T02:19:02+01:00 |2022-01-07T02:34:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |       2022|\n|0d016955-26db-966c-3d52-26d441bfcb97 |999-47-8500            |Ms.    |Tracy345   |Smith67      |2000-07-17 | 410620009|SNOMED |39c15c0f-5c49-311e-99d2-1fb99d80e06e |HARBOR HEALTH SERVICES INC                      |Dr. Salvador46 Homenick806 |9999977496      |Well child visit (procedure)               |2014-08-18T14:52:06+02:00 |2014-08-18T15:07:06+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |       2014|\n|3a2311a7-eb30-2aae-59c0-55ae273d1581 |999-40-6084            |NA     |Janene3    |Howe413      |2016-11-01 | 410620009|SNOMED |2e8b42f8-4300-30a9-a576-d513d1021a0a |GREATER LOWELL FAMILY PRACTICE PC               |Dr. Homero668 Salcedo309   |9999959890      |Well child visit (procedure)               |2016-11-01T04:38:02+01:00 |2016-11-01T04:53:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |       2016|\n\n\n\n\n\n\n\nOrder\nIt often occurs that you want to order your data. In this case let’s order the patient timeline by start_time. Most libraries automatically order in an ascending/asc order: oldest first, and alow you to order descending/desc (newest first).\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\ndf_ordered_pandas = df_timeline_pandas.sort_values(by = 'start_time', ascending = False)\ndf_ordered_pandas[['patient_id','start_time','procedure_name']].head()\n\n\n\n\n\n\n\n\npatient_id\nstart_time\nprocedure_name\n\n\n\n\n1871\n1d24c422-98a8-713d-3184-fbd05c3695a1\n2023-09-05 10:06:14+00:00\nWell child visit (procedure)\n\n\n1872\n1d24c422-98a8-713d-3184-fbd05c3695a1\n2023-09-05 10:06:14+00:00\nWell child visit (procedure)\n\n\n9916\n404e3ebd-a1e3-4678-7d4e-58a48ca21418\n2023-09-05 03:32:07+00:00\nWell child visit (procedure)\n\n\n5872\n4efaa926-30cf-0fcd-04d9-0d31c4071483\n2023-09-04 04:12:02+00:00\nGeneral examination of patient (procedure)\n\n\n12301\n8f262a31-6268-5a96-7432-1723d168687f\n2023-09-04 01:54:17+00:00\nGeneral examination of patient (procedure)\n\n\n\n\n\n\n\n\n\n\ndf_ordered_polars = (\n    df_timeline_polars\n    .with_columns(\n        pl.col(\"start_time\").str.to_datetime(format=\"%Y-%m-%dT%H:%M:%S%z\")\n    )\n    .sort(\"start_time\")\n)\nprint(df_ordered_polars.head())\n\nshape: (5, 18)\n┌────────────┬────────────┬────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ patient_id ┆ social_sec ┆ prefix ┆ first_nam ┆ … ┆ end_time  ┆ Vaccine_n ┆ vaccine_c ┆ vaccine_c │\n│ ---        ┆ urity_numb ┆ ---    ┆ e         ┆   ┆ ---       ┆ ame       ┆ ode       ┆ ode_syste │\n│ str        ┆ er         ┆ str    ┆ ---       ┆   ┆ str       ┆ ---       ┆ ---       ┆ m         │\n│            ┆ ---        ┆        ┆ str       ┆   ┆           ┆ str       ┆ str       ┆ ---       │\n│            ┆ str        ┆        ┆           ┆   ┆           ┆           ┆           ┆ str       │\n╞════════════╪════════════╪════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 9808a732-1 ┆ 999-90-152 ┆ Mrs.   ┆ Pattie91  ┆ … ┆ 2013-09-1 ┆ Influenza ┆ 140       ┆ CVX       │\n│ f51-6483-d ┆ 4          ┆        ┆           ┆   ┆ 1T19:23:1 ┆ ,         ┆           ┆           │\n│ 8b0-ec0d61 ┆            ┆        ┆           ┆   ┆ 4+02:00   ┆ seasonal, ┆           ┆           │\n│ f8…        ┆            ┆        ┆           ┆   ┆           ┆ injectabl ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆           ┆ e,…       ┆           ┆           │\n│ 6f93e13d-d ┆ 999-65-407 ┆ Mrs.   ┆ Carrie738 ┆ … ┆ 2013-09-1 ┆ Influenza ┆ 140       ┆ CVX       │\n│ 237-acc2-4 ┆ 9          ┆        ┆           ┆   ┆ 1T21:06:5 ┆ ,         ┆           ┆           │\n│ 7f0-d1fa20 ┆            ┆        ┆           ┆   ┆ 0+02:00   ┆ seasonal, ┆           ┆           │\n│ c6…        ┆            ┆        ┆           ┆   ┆           ┆ injectabl ┆           ┆           │\n│            ┆            ┆        ┆           ┆   ┆           ┆ e,…       ┆           ┆           │\n│ 7aafabc2-f ┆ 999-49-954 ┆ null   ┆ Maximina9 ┆ … ┆ 2013-09-1 ┆ Hep B,    ┆ 08        ┆ CVX       │\n│ 4cf-3d82-f ┆ 2          ┆        ┆ 16        ┆   ┆ 2T05:05:4 ┆ adolescen ┆           ┆           │\n│ 1e9-64d809 ┆            ┆        ┆           ┆   ┆ 5+02:00   ┆ t or      ┆           ┆           │\n│ 4b…        ┆            ┆        ┆           ┆   ┆           ┆ pediatric ┆           ┆           │\n│ 1c2f968a-4 ┆ 999-61-837 ┆ null   ┆ Claribel7 ┆ … ┆ 2013-09-1 ┆ varicella ┆ 21        ┆ CVX       │\n│ 735-c752-0 ┆ 5          ┆        ┆ 06        ┆   ┆ 3T02:11:3 ┆           ┆           ┆           │\n│ 7dd-54a664 ┆            ┆        ┆           ┆   ┆ 5+02:00   ┆           ┆           ┆           │\n│ fe…        ┆            ┆        ┆           ┆   ┆           ┆           ┆           ┆           │\n│ 1c2f968a-4 ┆ 999-61-837 ┆ null   ┆ Claribel7 ┆ … ┆ 2013-09-1 ┆ IPV       ┆ 10        ┆ CVX       │\n│ 735-c752-0 ┆ 5          ┆        ┆ 06        ┆   ┆ 3T02:11:3 ┆           ┆           ┆           │\n│ 7dd-54a664 ┆            ┆        ┆           ┆   ┆ 5+02:00   ┆           ┆           ┆           │\n│ fe…        ┆            ┆        ┆           ┆   ┆           ┆           ┆           ┆           │\n└────────────┴────────────┴────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n\n\n\n\n\nquery = \"\"\"\nSelect \n    * \nfrom patient_timeline\norder by start_time asc \nlimit 5\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\n9808a732-1f51-6483-d8b0-ec0d61f8cead\n999-90-1524\nMrs.\nPattie91\nAbbott774\n1967-08-23\n162673000\nSNOMED\nb44955d1-f0e2-3beb-a013-708a81dbe430\nSIGNATURE HEALTHCARE MEDICAL GROUP INC\nDr. Ernest565 Runte676\n9999970699\nGeneral examination of patient (procedure)\n2013-09-11T19:08:14+02:00\n2013-09-11T19:23:14+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n1\n6f93e13d-d237-acc2-47f0-d1fa20c62df2\n999-65-4079\nMrs.\nCarrie738\nBlick895\n1985-07-03\n162673000\nSNOMED\n11a40a26-a5a3-331d-aef0-d06dd90e2b4e\nCAPE COD PRIMARY CARE LLC\nDr. Len277 Wintheiser220\n9999947994\nGeneral examination of patient (procedure)\n2013-09-11T20:51:50+02:00\n2013-09-11T21:06:50+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n2\n7aafabc2-f4cf-3d82-f1e9-64d8094beeb6\n999-49-9542\nNone\nMaximina916\nRutherford999\n2013-09-12\n410620009\nSNOMED\ndd9914b0-9491-3330-a890-d34e95e497ea\nCHILD & FAMILY SERVICES, INC.\nDr. Assunta351 Haley279\n9999967794\nWell child visit (procedure)\n2013-09-12T04:50:45+02:00\n2013-09-12T05:05:45+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n3\n1c2f968a-4735-c752-07dd-54a664fef295\n999-61-8375\nNone\nClaribel706\nRuecker817\n2008-10-03\n410620009\nSNOMED\n542185c1-943a-30f4-aba0-0efaa92488a4\nEVEREST HEALTH CARE SPECIALISTS PLLC\nDr. Luetta803 Rau926\n9999955096\nWell child visit (procedure)\n2013-09-13T01:56:35+02:00\n2013-09-13T02:11:35+02:00\nMMR\n03\nCVX\n\n\n4\n1c2f968a-4735-c752-07dd-54a664fef295\n999-61-8375\nNone\nClaribel706\nRuecker817\n2008-10-03\n410620009\nSNOMED\n542185c1-943a-30f4-aba0-0efaa92488a4\nEVEREST HEALTH CARE SPECIALISTS PLLC\nDr. Luetta803 Rau926\n9999955096\nWell child visit (procedure)\n2013-09-13T01:56:35+02:00\n2013-09-13T02:11:35+02:00\nDTaP\n20\nCVX\n\n\n\n\n\n\n\n\n\n\ndf_ordered_ibis = df_timeline_IBIS.order_by(df_timeline_IBIS.start_time.cast(\"timestamp\")).to_pandas()\ndf_ordered_ibis.head()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\n9808a732-1f51-6483-d8b0-ec0d61f8cead\n999-90-1524\nMrs.\nPattie91\nAbbott774\n1967-08-23\n162673000\nSNOMED\nb44955d1-f0e2-3beb-a013-708a81dbe430\nSIGNATURE HEALTHCARE MEDICAL GROUP INC\nDr. Ernest565 Runte676\n9999970699\nGeneral examination of patient (procedure)\n2013-09-11T19:08:14+02:00\n2013-09-11T19:23:14+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n1\n6f93e13d-d237-acc2-47f0-d1fa20c62df2\n999-65-4079\nMrs.\nCarrie738\nBlick895\n1985-07-03\n162673000\nSNOMED\n11a40a26-a5a3-331d-aef0-d06dd90e2b4e\nCAPE COD PRIMARY CARE LLC\nDr. Len277 Wintheiser220\n9999947994\nGeneral examination of patient (procedure)\n2013-09-11T20:51:50+02:00\n2013-09-11T21:06:50+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n\n\n2\n7aafabc2-f4cf-3d82-f1e9-64d8094beeb6\n999-49-9542\nNone\nMaximina916\nRutherford999\n2013-09-12\n410620009\nSNOMED\ndd9914b0-9491-3330-a890-d34e95e497ea\nCHILD & FAMILY SERVICES, INC.\nDr. Assunta351 Haley279\n9999967794\nWell child visit (procedure)\n2013-09-12T04:50:45+02:00\n2013-09-12T05:05:45+02:00\nHep B, adolescent or pediatric\n08\nCVX\n\n\n3\n1c2f968a-4735-c752-07dd-54a664fef295\n999-61-8375\nNone\nClaribel706\nRuecker817\n2008-10-03\n410620009\nSNOMED\n542185c1-943a-30f4-aba0-0efaa92488a4\nEVEREST HEALTH CARE SPECIALISTS PLLC\nDr. Luetta803 Rau926\n9999955096\nWell child visit (procedure)\n2013-09-13T01:56:35+02:00\n2013-09-13T02:11:35+02:00\nvaricella\n21\nCVX\n\n\n4\n1c2f968a-4735-c752-07dd-54a664fef295\n999-61-8375\nNone\nClaribel706\nRuecker817\n2008-10-03\n410620009\nSNOMED\n542185c1-943a-30f4-aba0-0efaa92488a4\nEVEREST HEALTH CARE SPECIALISTS PLLC\nDr. Luetta803 Rau926\n9999955096\nWell child visit (procedure)\n2013-09-13T01:56:35+02:00\n2013-09-13T02:11:35+02:00\nIPV\n10\nCVX\n\n\n\n\n\n\n\n\n\n\ndf_ordered_pyspark = df_timeline_spark.orderBy('start_time',ascending = False)\ndf_ordered_pyspark.limit(5).show()\n\n+--------------------+----------------------+------+-----------+--------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+\n|          patient_id|social_security_number|prefix| first_name|     last_name|          birthDate|     code|system|     organization_id|   organization_name|   practitioner_name|practitioner_id|      procedure_name|         start_time|            end_time|        Vaccine_name|vaccine_code|vaccine_code_system|year|\n+--------------------+----------------------+------+-----------+--------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+\n|1d24c422-98a8-713...|           999-29-9635|  NULL|  Taneka590|       Howe413|2011-08-16 00:00:00|410620009|SNOMED|545dcda5-7471-374...|COMMUNITY HEALTH ...|Dr. Lezlie553 Kos...|     9999981191|Well child visit ...|2023-09-05 08:06:14|2023-09-05T12:21:...|   HPV, quadrivalent|          62|                CVX|2023|\n|1d24c422-98a8-713...|           999-29-9635|  NULL|  Taneka590|       Howe413|2011-08-16 00:00:00|410620009|SNOMED|545dcda5-7471-374...|COMMUNITY HEALTH ...|Dr. Lezlie553 Kos...|     9999981191|Well child visit ...|2023-09-05 08:06:14|2023-09-05T12:21:...|Influenza, season...|         140|                CVX|2023|\n|404e3ebd-a1e3-467...|           999-54-8765|  NULL|Nicholle822|      Runte676|2013-08-27 00:00:00|410620009|SNOMED|84abfbd5-41c1-3df...|SKIN WELLNESS PHY...|Dr. Cole117 Block661|     9999953190|Well child visit ...|2023-09-05 01:32:07|2023-09-05T05:47:...|Influenza, season...|         140|                CVX|2023|\n|4efaa926-30cf-0fc...|           999-66-1148|  Mrs.|    Lisa683|Schamberger479|1951-04-30 00:00:00|162673000|SNOMED|0583e4f7-f1c2-310...|COMMUNITY HEALTH ...| Dr. Jewel43 Howe413|     9999978494|General examinati...|2023-09-04 02:12:02|2023-09-04T06:27:...|Influenza, season...|         140|                CVX|2023|\n|8f262a31-6268-5a9...|           999-13-3109|  Mrs.|      Pa577|     Graham902|1970-08-17 00:00:00|162673000|SNOMED|e1892a2c-6dca-3c4...|PRIMARY & PREVENT...|Dr. Derek111 Erdm...|     9999954990|General examinati...|2023-09-03 23:54:17|2023-09-04T04:09:...|Influenza, season...|         140|                CVX|2023|\n+--------------------+----------------------+------+-----------+--------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+\n\n\n\n\n\n\n%%R\ndf_ordered &lt;- df %&gt;%\n  mutate(start_time = as.Date(start_time), format = \"%Y-%m-%d\") %&gt;%\n  arrange(start_time)\nkable(head(df_ordered))\n\n\n\n|patient_id                           |social_security_number |prefix |first_name  |last_name     |birthDate  |      code|system |organization_id                      |organization_name                             |practitioner_name        |practitioner_id |procedure_name                             |start_time |end_time                  |Vaccine_name                                       |vaccine_code |vaccine_code_system |format   |\n|:------------------------------------|:----------------------|:------|:-----------|:-------------|:----------|---------:|:------|:------------------------------------|:---------------------------------------------|:------------------------|:---------------|:------------------------------------------|:----------|:-------------------------|:--------------------------------------------------|:------------|:-------------------|:--------|\n|6f93e13d-d237-acc2-47f0-d1fa20c62df2 |999-65-4079            |Mrs.   |Carrie738   |Blick895      |1985-07-03 | 162673000|SNOMED |11a40a26-a5a3-331d-aef0-d06dd90e2b4e |CAPE COD PRIMARY CARE LLC                     |Dr. Len277 Wintheiser220 |9999947994      |General examination of patient (procedure) |2013-09-11 |2013-09-11T21:06:50+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |%Y-%m-%d |\n|9808a732-1f51-6483-d8b0-ec0d61f8cead |999-90-1524            |Mrs.   |Pattie91    |Abbott774     |1967-08-23 | 162673000|SNOMED |b44955d1-f0e2-3beb-a013-708a81dbe430 |SIGNATURE HEALTHCARE MEDICAL GROUP INC        |Dr. Ernest565 Runte676   |9999970699      |General examination of patient (procedure) |2013-09-11 |2013-09-11T19:23:14+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |%Y-%m-%d |\n|7aafabc2-f4cf-3d82-f1e9-64d8094beeb6 |999-49-9542            |NA     |Maximina916 |Rutherford999 |2013-09-12 | 410620009|SNOMED |dd9914b0-9491-3330-a890-d34e95e497ea |CHILD & FAMILY SERVICES, INC.                 |Dr. Assunta351 Haley279  |9999967794      |Well child visit (procedure)               |2013-09-12 |2013-09-12T05:05:45+02:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |%Y-%m-%d |\n|0a78537c-628d-77a4-d16b-ec23b6327c9e |999-89-9767            |NA     |Kalyn451    |Smith67       |2007-09-28 | 410620009|SNOMED |7a75decf-7d3f-3b0d-8c2b-3abf0a8c7f58 |NEW ENGLAND PROFESSIONAL HOME HEALTH CARE LLC |Dr. Afton574 Kulas532    |9999944595      |Well child visit (procedure)               |2013-09-13 |2013-09-13T06:33:22+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |%Y-%m-%d |\n|1c2f968a-4735-c752-07dd-54a664fef295 |999-61-8375            |NA     |Claribel706 |Ruecker817    |2008-10-03 | 410620009|SNOMED |542185c1-943a-30f4-aba0-0efaa92488a4 |EVEREST HEALTH CARE SPECIALISTS PLLC          |Dr. Luetta803 Rau926     |9999955096      |Well child visit (procedure)               |2013-09-13 |2013-09-13T02:11:35+02:00 |varicella                                          |21           |CVX                 |%Y-%m-%d |\n|1c2f968a-4735-c752-07dd-54a664fef295 |999-61-8375            |NA     |Claribel706 |Ruecker817    |2008-10-03 | 410620009|SNOMED |542185c1-943a-30f4-aba0-0efaa92488a4 |EVEREST HEALTH CARE SPECIALISTS PLLC          |Dr. Luetta803 Rau926     |9999955096      |Well child visit (procedure)               |2013-09-13 |2013-09-13T02:11:35+02:00 |IPV                                                |10           |CVX                 |%Y-%m-%d |\n\n\n\n\n\n\n\nRename\nAnother action that is done frequently is the renaming of a column. As an example we rename the birthDate column to birth_date\n\npandaspolarsSQLIBISpysparkdplyr\n\n\nIn pandas, many actions such as rename can be adapted directly in the same dataframe by adding the option inplace = True.\nAlternatively, one can create a new dataframe and keep the name the same in the original dataframe.\n\n#option 1 - change in dataframe\ndf_timeline_pandas.rename(columns = {'birthDate':'birth_date'}, inplace = True)\n\n#option 2 - change only in new dataframe\ndf_renamed_pandas = df_timeline_pandas.rename(columns = {'birthDate':'birth_date'})\ndf_renamed_pandas.head(1)\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirth_date\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\nyear\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08 06:11:47+00:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n2015\n\n\n\n\n\n\n\n\n\n\ndf_renamed_polars = (\n    df_timeline_polars\n    .rename({\"birthDate\": \"birth_date\"})\n)\nprint(df_renamed_polars.head(1))\n\nshape: (1, 18)\n┌────────────┬────────────┬────────┬───────────┬───┬───────────┬───────────┬───────────┬───────────┐\n│ patient_id ┆ social_sec ┆ prefix ┆ first_nam ┆ … ┆ end_time  ┆ Vaccine_n ┆ vaccine_c ┆ vaccine_c │\n│ ---        ┆ urity_numb ┆ ---    ┆ e         ┆   ┆ ---       ┆ ame       ┆ ode       ┆ ode_syste │\n│ str        ┆ er         ┆ str    ┆ ---       ┆   ┆ str       ┆ ---       ┆ ---       ┆ m         │\n│            ┆ ---        ┆        ┆ str       ┆   ┆           ┆ str       ┆ str       ┆ ---       │\n│            ┆ str        ┆        ┆           ┆   ┆           ┆           ┆           ┆ str       │\n╞════════════╪════════════╪════════╪═══════════╪═══╪═══════════╪═══════════╪═══════════╪═══════════╡\n│ 4fc244f3-2 ┆ 999-53-581 ┆ Mrs.   ┆ Alyce744  ┆ … ┆ 2015-01-0 ┆ zoster    ┆ 121       ┆ CVX       │\n│ c0e-4017-d ┆ 3          ┆        ┆           ┆   ┆ 8T07:26:4 ┆ vaccine,  ┆           ┆           │\n│ 64d-c2c4cd ┆            ┆        ┆           ┆   ┆ 7+01:00   ┆ live      ┆           ┆           │\n│ 03…        ┆            ┆        ┆           ┆   ┆           ┆           ┆           ┆           │\n└────────────┴────────────┴────────┴───────────┴───┴───────────┴───────────┴───────────┴───────────┘\n\n\n\n\n\nquery = \"\"\"\nalter table patient_timeline\nrename column birthDate to birth_date;\n\nselect * from patient_timeline limit 5;\n\"\"\"\nprint(con_duckdb.sql(query).to_df())\n\ncon_duckdb.sql(\"alter table patient_timeline rename column birth_date to birthDate\")\n\n                             patient_id social_security_number prefix   \n0  4fc244f3-2c0e-4017-d64d-c2c4cd03655f            999-53-5813   Mrs.  \\\n1  4fc244f3-2c0e-4017-d64d-c2c4cd03655f            999-53-5813   Mrs.   \n2  fca8d2ca-7aef-2c27-3bba-3f94723012f5            999-24-8599   None   \n3  19936964-a432-d501-2cd5-fa52db6b9f41            999-33-7974   None   \n4  0d016955-26db-966c-3d52-26d441bfcb97            999-47-8500    Ms.   \n\n   first_name     last_name birth_date       code  system   \n0    Alyce744  Bergstrom287 1965-01-07  162673000  SNOMED  \\\n1    Alyce744  Bergstrom287 1965-01-07  162673000  SNOMED   \n2   Marlen929  Greenholt190 2016-04-01  410620009  SNOMED   \n3  Monique148      Haley279 2022-01-07  410620009  SNOMED   \n4    Tracy345       Smith67 2000-07-17  410620009  SNOMED   \n\n                        organization_id   \n0  b03b624d-c939-3688-986d-9555b8009a3b  \\\n1  b03b624d-c939-3688-986d-9555b8009a3b   \n2  3f12ebb4-e03c-3453-88d2-4fc9682383df   \n3  c6b019eb-28ec-36f6-abf3-bcc4d1d58966   \n4  39c15c0f-5c49-311e-99d2-1fb99d80e06e   \n\n                                 organization_name   \n0                        HOLYOKE HEALTH CENTER INC  \\\n1                        HOLYOKE HEALTH CENTER INC   \n2  NEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC   \n3                DUTTON FAMILY CARE ASSOCIATES LLP   \n4                       HARBOR HEALTH SERVICES INC   \n\n            practitioner_name practitioner_id   \n0  Dr. Bennett146 Hartmann983      9999981894  \\\n1  Dr. Bennett146 Hartmann983      9999981894   \n2      Dr. Homero668 Rolón954      9999962894   \n3   Dr. Maren639 Aufderhar910      9999950790   \n4  Dr. Salvador46 Homenick806      9999977496   \n\n                               procedure_name                 start_time   \n0  General examination of patient (procedure)  2015-01-08T07:11:47+01:00  \\\n1  General examination of patient (procedure)  2015-01-08T07:11:47+01:00   \n2                Well child visit (procedure)  2016-04-01T04:09:48+02:00   \n3                Well child visit (procedure)  2022-01-07T02:19:02+01:00   \n4                Well child visit (procedure)  2014-08-18T14:52:06+02:00   \n\n                    end_time   \n0  2015-01-08T07:26:47+01:00  \\\n1  2015-01-08T07:26:47+01:00   \n2  2016-04-01T04:24:48+02:00   \n3  2022-01-07T02:34:02+01:00   \n4  2014-08-18T15:07:06+02:00   \n\n                                        Vaccine_name vaccine_code   \n0                               zoster vaccine, live          121  \\\n1  Influenza, seasonal, injectable, preservative ...          140   \n2                     Hep B, adolescent or pediatric           08   \n3                     Hep B, adolescent or pediatric           08   \n4  Influenza, seasonal, injectable, preservative ...          140   \n\n  vaccine_code_system  \n0                 CVX  \n1                 CVX  \n2                 CVX  \n3                 CVX  \n4                 CVX  \n\n\n\n\n\ndf_renamed_ibis = df_timeline_IBIS.relabel({\"birthDate\": \"birth_date\"}).to_pandas()\ndf_renamed_ibis.head(1)\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirth_date\ncode\nsystem\norganization_id\norganization_name\npractitioner_name\npractitioner_id\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\nDr. Bennett146 Hartmann983\n9999981894\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n\n\n\n\n\n\n\n\n\n\ndf_renamed_pyspark = df_timeline_spark.withColumnRenamed(\"birthDate\", \"birth_date\")\ndf_renamed_pyspark.head(1)\n\n[Row(patient_id='4fc244f3-2c0e-4017-d64d-c2c4cd03655f', social_security_number='999-53-5813', prefix='Mrs.', first_name='Alyce744', last_name='Bergstrom287', birth_date=datetime.datetime(1965, 1, 7, 0, 0), code=162673000, system='SNOMED', organization_id='b03b624d-c939-3688-986d-9555b8009a3b', organization_name='HOLYOKE HEALTH CENTER INC', practitioner_name='Dr. Bennett146 Hartmann983', practitioner_id='9999981894', procedure_name='General examination of patient (procedure)', start_time=datetime.datetime(2015, 1, 8, 5, 11, 47), end_time='2015-01-08T07:26:47+01:00', Vaccine_name='zoster vaccine, live', vaccine_code='121', vaccine_code_system='CVX', year=2015)]\n\n\n\n\n\n%%R\ndf_renamed &lt;- df %&gt;%\n  rename(birth_date = birthDate)\nkable(head(df_renamed))\n\n\n\n|patient_id                           |social_security_number |prefix |first_name |last_name    |birth_date |      code|system |organization_id                      |organization_name                               |practitioner_name          |practitioner_id |procedure_name                             |start_time                |end_time                  |Vaccine_name                                       |vaccine_code |vaccine_code_system |\n|:------------------------------------|:----------------------|:------|:----------|:------------|:----------|---------:|:------|:------------------------------------|:-----------------------------------------------|:--------------------------|:---------------|:------------------------------------------|:-------------------------|:-------------------------|:--------------------------------------------------|:------------|:-------------------|\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |zoster vaccine, live                               |121          |CVX                 |\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |\n|fca8d2ca-7aef-2c27-3bba-3f94723012f5 |999-24-8599            |NA     |Marlen929  |Greenholt190 |2016-04-01 | 410620009|SNOMED |3f12ebb4-e03c-3453-88d2-4fc9682383df |NEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC |Dr. Homero668 Rolón954     |9999962894      |Well child visit (procedure)               |2016-04-01T04:09:48+02:00 |2016-04-01T04:24:48+02:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n|19936964-a432-d501-2cd5-fa52db6b9f41 |999-33-7974            |NA     |Monique148 |Haley279     |2022-01-07 | 410620009|SNOMED |c6b019eb-28ec-36f6-abf3-bcc4d1d58966 |DUTTON FAMILY CARE ASSOCIATES LLP               |Dr. Maren639 Aufderhar910  |9999950790      |Well child visit (procedure)               |2022-01-07T02:19:02+01:00 |2022-01-07T02:34:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n|0d016955-26db-966c-3d52-26d441bfcb97 |999-47-8500            |Ms.    |Tracy345   |Smith67      |2000-07-17 | 410620009|SNOMED |39c15c0f-5c49-311e-99d2-1fb99d80e06e |HARBOR HEALTH SERVICES INC                      |Dr. Salvador46 Homenick806 |9999977496      |Well child visit (procedure)               |2014-08-18T14:52:06+02:00 |2014-08-18T15:07:06+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |\n|3a2311a7-eb30-2aae-59c0-55ae273d1581 |999-40-6084            |NA     |Janene3    |Howe413      |2016-11-01 | 410620009|SNOMED |2e8b42f8-4300-30a9-a576-d513d1021a0a |GREATER LOWELL FAMILY PRACTICE PC               |Dr. Homero668 Salcedo309   |9999959890      |Well child visit (procedure)               |2016-11-01T04:38:02+01:00 |2016-11-01T04:53:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |\n\n\n\n\n\n\n\nJoin\nIt’s rare that a data analysis involves only a single data frame. Typically you have many data frames, and you must join them together to answer the questions that you’re interested in.\nAn inner join keeps observations that appear in both tables.\n\n\n\ninner join\n\n\nAn outer join keeps observations that appear in at least one of the tables. There are three types of outer joins:\n\nA left join keeps all observations in x.\nA right join keeps all observations in y.\nA full join keeps all observations in x and y.\n\n\n\n\nouter join\n\n\nThe most commonly used join is the left join: you use this whenever you look up additional data from another table, because it preserves the original observations even when there isn’t a match. The left join should be your default join: use it unless you have a strong reason to prefer one of the others.\n\npandaspolarsSQLIBISpysparkdplyr\n\n\n\ndf_joined_pandas = pd.merge(\n    df_timeline_pandas,\n    df_price_list_pandas, \n    left_on = ['vaccine_code','vaccine_code_system'], \n    right_on = ['code','system'], \n    how ='left'\n)\n\ndf_joined_pandas.filter(items = ['patient_id','start_time','year','vaccine_name','item_claimed','USD']).head()\n\n\n\n\n\n\n\n\npatient_id\nstart_time\nyear\nitem_claimed\nUSD\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n2015-01-08 06:11:47+00:00\n2015\nzoster vaccine, live\n136.0\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n2015-01-08 06:11:47+00:00\n2015\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n2016-04-01 02:09:48+00:00\n2016\nHep B, adolescent or pediatric\n136.0\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n2022-01-07 01:19:02+00:00\n2022\nHep B, adolescent or pediatric\n136.0\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n2014-08-18 12:52:06+00:00\n2014\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n\n\n\n\n\n\n\n\ndf_joined_polars = (\n    df_timeline_polars\n    .join(\n        df_price_list_polars,\n        left_on=[\"vaccine_code\", \"vaccine_code_system\"],\n        right_on=[\"code\", \"system\"],\n        how=\"left\"\n    )\n)\nprint(df_joined_polars.head())\n\nshape: (5, 20)\n┌────────────┬────────────┬────────┬────────────┬───┬────────────┬────────────┬────────────┬───────┐\n│ patient_id ┆ social_sec ┆ prefix ┆ first_name ┆ … ┆ vaccine_co ┆ vaccine_co ┆ item_claim ┆ USD   │\n│ ---        ┆ urity_numb ┆ ---    ┆ ---        ┆   ┆ de         ┆ de_system  ┆ ed         ┆ ---   │\n│ str        ┆ er         ┆ str    ┆ str        ┆   ┆ ---        ┆ ---        ┆ ---        ┆ f64   │\n│            ┆ ---        ┆        ┆            ┆   ┆ str        ┆ str        ┆ str        ┆       │\n│            ┆ str        ┆        ┆            ┆   ┆            ┆            ┆            ┆       │\n╞════════════╪════════════╪════════╪════════════╪═══╪════════════╪════════════╪════════════╪═══════╡\n│ 4fc244f3-2 ┆ 999-53-581 ┆ Mrs.   ┆ Alyce744   ┆ … ┆ 121        ┆ CVX        ┆ zoster     ┆ 136.0 │\n│ c0e-4017-d ┆ 3          ┆        ┆            ┆   ┆            ┆            ┆ vaccine,   ┆       │\n│ 64d-c2c4cd ┆            ┆        ┆            ┆   ┆            ┆            ┆ live       ┆       │\n│ 03…        ┆            ┆        ┆            ┆   ┆            ┆            ┆            ┆       │\n│ 4fc244f3-2 ┆ 999-53-581 ┆ Mrs.   ┆ Alyce744   ┆ … ┆ 140        ┆ CVX        ┆ Influenza, ┆ 136.0 │\n│ c0e-4017-d ┆ 3          ┆        ┆            ┆   ┆            ┆            ┆ seasonal,  ┆       │\n│ 64d-c2c4cd ┆            ┆        ┆            ┆   ┆            ┆            ┆ injectable ┆       │\n│ 03…        ┆            ┆        ┆            ┆   ┆            ┆            ┆ ,…         ┆       │\n│ fca8d2ca-7 ┆ 999-24-859 ┆ null   ┆ Marlen929  ┆ … ┆ 08         ┆ CVX        ┆ Hep B,     ┆ 136.0 │\n│ aef-2c27-3 ┆ 9          ┆        ┆            ┆   ┆            ┆            ┆ adolescent ┆       │\n│ bba-3f9472 ┆            ┆        ┆            ┆   ┆            ┆            ┆ or         ┆       │\n│ 30…        ┆            ┆        ┆            ┆   ┆            ┆            ┆ pediatric  ┆       │\n│ 19936964-a ┆ 999-33-797 ┆ null   ┆ Monique148 ┆ … ┆ 08         ┆ CVX        ┆ Hep B,     ┆ 136.0 │\n│ 432-d501-2 ┆ 4          ┆        ┆            ┆   ┆            ┆            ┆ adolescent ┆       │\n│ cd5-fa52db ┆            ┆        ┆            ┆   ┆            ┆            ┆ or         ┆       │\n│ 6b…        ┆            ┆        ┆            ┆   ┆            ┆            ┆ pediatric  ┆       │\n│ 0d016955-2 ┆ 999-47-850 ┆ Ms.    ┆ Tracy345   ┆ … ┆ 140        ┆ CVX        ┆ Influenza, ┆ 136.0 │\n│ 6db-966c-3 ┆ 0          ┆        ┆            ┆   ┆            ┆            ┆ seasonal,  ┆       │\n│ d52-26d441 ┆            ┆        ┆            ┆   ┆            ┆            ┆ injectable ┆       │\n│ bf…        ┆            ┆        ┆            ┆   ┆            ┆            ┆ ,…         ┆       │\n└────────────┴────────────┴────────┴────────────┴───┴────────────┴────────────┴────────────┴───────┘\n\n\n\n\n\nquery = \"\"\"\nSelect \n* \nfrom patient_timeline pt\nleft join price_list pl on pt.vaccine_code = pl.code and pt.vaccine_code_system = pl.system\nlimit 5;\n\"\"\"\ncon_duckdb.sql(query).to_df()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\n...\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\ncode_2\nsystem_2\nitem_claimed\nUSD\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\n...\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n121\nCVX\nzoster vaccine, live\n136.0\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\n...\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n140\nCVX\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\n...\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n08\nCVX\nHep B, adolescent or pediatric\n136.0\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\n...\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n08\nCVX\nHep B, adolescent or pediatric\n136.0\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\n...\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n140\nCVX\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n\n\n5 rows × 22 columns\n\n\n\n\n\n\ndf_joined_ibis = df_timeline_IBIS.left_join(\n    df_price_list_ibis, [\n        df_timeline_IBIS.vaccine_code == df_price_list_ibis.code,\n        df_timeline_IBIS.vaccine_code_system == df_price_list_ibis.system\n    ]\n).to_pandas()\ndf_joined_ibis.head()\n\n\n\n\n\n\n\n\npatient_id\nsocial_security_number\nprefix\nfirst_name\nlast_name\nbirthDate\ncode\nsystem\norganization_id\norganization_name\n...\nprocedure_name\nstart_time\nend_time\nVaccine_name\nvaccine_code\nvaccine_code_system\ncode_right\nsystem_right\nitem_claimed\nUSD\n\n\n\n\n0\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\n...\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nzoster vaccine, live\n121\nCVX\n121\nCVX\nzoster vaccine, live\n136.0\n\n\n1\n4fc244f3-2c0e-4017-d64d-c2c4cd03655f\n999-53-5813\nMrs.\nAlyce744\nBergstrom287\n1965-01-07\n162673000\nSNOMED\nb03b624d-c939-3688-986d-9555b8009a3b\nHOLYOKE HEALTH CENTER INC\n...\nGeneral examination of patient (procedure)\n2015-01-08T07:11:47+01:00\n2015-01-08T07:26:47+01:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n140\nCVX\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n2\nfca8d2ca-7aef-2c27-3bba-3f94723012f5\n999-24-8599\nNone\nMarlen929\nGreenholt190\n2016-04-01\n410620009\nSNOMED\n3f12ebb4-e03c-3453-88d2-4fc9682383df\nNEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC\n...\nWell child visit (procedure)\n2016-04-01T04:09:48+02:00\n2016-04-01T04:24:48+02:00\nHep B, adolescent or pediatric\n08\nCVX\n08\nCVX\nHep B, adolescent or pediatric\n136.0\n\n\n3\n19936964-a432-d501-2cd5-fa52db6b9f41\n999-33-7974\nNone\nMonique148\nHaley279\n2022-01-07\n410620009\nSNOMED\nc6b019eb-28ec-36f6-abf3-bcc4d1d58966\nDUTTON FAMILY CARE ASSOCIATES LLP\n...\nWell child visit (procedure)\n2022-01-07T02:19:02+01:00\n2022-01-07T02:34:02+01:00\nHep B, adolescent or pediatric\n08\nCVX\n08\nCVX\nHep B, adolescent or pediatric\n136.0\n\n\n4\n0d016955-26db-966c-3d52-26d441bfcb97\n999-47-8500\nMs.\nTracy345\nSmith67\n2000-07-17\n410620009\nSNOMED\n39c15c0f-5c49-311e-99d2-1fb99d80e06e\nHARBOR HEALTH SERVICES INC\n...\nWell child visit (procedure)\n2014-08-18T14:52:06+02:00\n2014-08-18T15:07:06+02:00\nInfluenza, seasonal, injectable, preservative ...\n140\nCVX\n140\nCVX\nInfluenza, seasonal, injectable, preservative ...\n136.0\n\n\n\n\n5 rows × 22 columns\n\n\n\n\n\n\ndf_joined_pyspark = df_timeline_spark.join(df_price_list_spark,(df_timeline_spark['vaccine_code'] == df_price_list_spark['code']) & (df_timeline_spark['vaccine_code_system'] == df_price_list_spark['system']),'inner')\n\ndf_joined_pyspark.limit(5).show()\n\n+--------------------+----------------------+------+----------+------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+----+------+--------------------+-----+\n|          patient_id|social_security_number|prefix|first_name|   last_name|          birthDate|     code|system|     organization_id|   organization_name|   practitioner_name|practitioner_id|      procedure_name|         start_time|            end_time|        Vaccine_name|vaccine_code|vaccine_code_system|year|code|system|        item_claimed|  USD|\n+--------------------+----------------------+------+----------+------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+----+------+--------------------+-----+\n|4fc244f3-2c0e-401...|           999-53-5813|  Mrs.|  Alyce744|Bergstrom287|1965-01-07 00:00:00|162673000|SNOMED|b03b624d-c939-368...|HOLYOKE HEALTH CE...|Dr. Bennett146 Ha...|     9999981894|General examinati...|2015-01-08 05:11:47|2015-01-08T07:26:...|zoster vaccine, live|         121|                CVX|2015| 121|   CVX|zoster vaccine, live|136.0|\n|4fc244f3-2c0e-401...|           999-53-5813|  Mrs.|  Alyce744|Bergstrom287|1965-01-07 00:00:00|162673000|SNOMED|b03b624d-c939-368...|HOLYOKE HEALTH CE...|Dr. Bennett146 Ha...|     9999981894|General examinati...|2015-01-08 05:11:47|2015-01-08T07:26:...|Influenza, season...|         140|                CVX|2015| 140|   CVX|Influenza, season...|136.0|\n|fca8d2ca-7aef-2c2...|           999-24-8599|  NULL| Marlen929|Greenholt190|2016-04-01 00:00:00|410620009|SNOMED|3f12ebb4-e03c-345...|NEW BEDFORD INTER...|Dr. Homero668 Rol...|     9999962894|Well child visit ...|2016-04-01 00:09:48|2016-04-01T04:24:...|Hep B, adolescent...|          08|                CVX|2016|  08|   CVX|Hep B, adolescent...|136.0|\n|19936964-a432-d50...|           999-33-7974|  NULL|Monique148|    Haley279|2022-01-07 00:00:00|410620009|SNOMED|c6b019eb-28ec-36f...|DUTTON FAMILY CAR...|Dr. Maren639 Aufd...|     9999950790|Well child visit ...|2022-01-07 00:19:02|2022-01-07T02:34:...|Hep B, adolescent...|          08|                CVX|2022|  08|   CVX|Hep B, adolescent...|136.0|\n|0d016955-26db-966...|           999-47-8500|   Ms.|  Tracy345|     Smith67|2000-07-17 00:00:00|410620009|SNOMED|39c15c0f-5c49-311...|HARBOR HEALTH SER...|Dr. Salvador46 Ho...|     9999977496|Well child visit ...|2014-08-18 10:52:06|2014-08-18T15:07:...|Influenza, season...|         140|                CVX|2014| 140|   CVX|Influenza, season...|136.0|\n+--------------------+----------------------+------+----------+------------+-------------------+---------+------+--------------------+--------------------+--------------------+---------------+--------------------+-------------------+--------------------+--------------------+------------+-------------------+----+----+------+--------------------+-----+\n\n\n\n\n\n\n%%R\ndf_joined &lt;- df %&gt;%\n  left_join(\n    df_price_list,\n    by = c(\"vaccine_code\" = \"code\", \"vaccine_code_system\" = \"system\")\n  )\nkable(head(df_joined))\n\n\n\n|patient_id                           |social_security_number |prefix |first_name |last_name    |birthDate  |      code|system |organization_id                      |organization_name                               |practitioner_name          |practitioner_id |procedure_name                             |start_time                |end_time                  |Vaccine_name                                       |vaccine_code |vaccine_code_system |item_claimed                                       | USD|\n|:------------------------------------|:----------------------|:------|:----------|:------------|:----------|---------:|:------|:------------------------------------|:-----------------------------------------------|:--------------------------|:---------------|:------------------------------------------|:-------------------------|:-------------------------|:--------------------------------------------------|:------------|:-------------------|:--------------------------------------------------|---:|\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |zoster vaccine, live                               |121          |CVX                 |zoster vaccine, live                               | 136|\n|4fc244f3-2c0e-4017-d64d-c2c4cd03655f |999-53-5813            |Mrs.   |Alyce744   |Bergstrom287 |1965-01-07 | 162673000|SNOMED |b03b624d-c939-3688-986d-9555b8009a3b |HOLYOKE HEALTH CENTER INC                       |Dr. Bennett146 Hartmann983 |9999981894      |General examination of patient (procedure) |2015-01-08T07:11:47+01:00 |2015-01-08T07:26:47+01:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |Influenza, seasonal, injectable, preservative free | 136|\n|fca8d2ca-7aef-2c27-3bba-3f94723012f5 |999-24-8599            |NA     |Marlen929  |Greenholt190 |2016-04-01 | 410620009|SNOMED |3f12ebb4-e03c-3453-88d2-4fc9682383df |NEW BEDFORD INTERNAL MEDICINE & GERIATRICS, LLC |Dr. Homero668 Rolón954     |9999962894      |Well child visit (procedure)               |2016-04-01T04:09:48+02:00 |2016-04-01T04:24:48+02:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |Hep B, adolescent or pediatric                     | 136|\n|19936964-a432-d501-2cd5-fa52db6b9f41 |999-33-7974            |NA     |Monique148 |Haley279     |2022-01-07 | 410620009|SNOMED |c6b019eb-28ec-36f6-abf3-bcc4d1d58966 |DUTTON FAMILY CARE ASSOCIATES LLP               |Dr. Maren639 Aufderhar910  |9999950790      |Well child visit (procedure)               |2022-01-07T02:19:02+01:00 |2022-01-07T02:34:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |Hep B, adolescent or pediatric                     | 136|\n|0d016955-26db-966c-3d52-26d441bfcb97 |999-47-8500            |Ms.    |Tracy345   |Smith67      |2000-07-17 | 410620009|SNOMED |39c15c0f-5c49-311e-99d2-1fb99d80e06e |HARBOR HEALTH SERVICES INC                      |Dr. Salvador46 Homenick806 |9999977496      |Well child visit (procedure)               |2014-08-18T14:52:06+02:00 |2014-08-18T15:07:06+02:00 |Influenza, seasonal, injectable, preservative free |140          |CVX                 |Influenza, seasonal, injectable, preservative free | 136|\n|3a2311a7-eb30-2aae-59c0-55ae273d1581 |999-40-6084            |NA     |Janene3    |Howe413      |2016-11-01 | 410620009|SNOMED |2e8b42f8-4300-30a9-a576-d513d1021a0a |GREATER LOWELL FAMILY PRACTICE PC               |Dr. Homero668 Salcedo309   |9999959890      |Well child visit (procedure)               |2016-11-01T04:38:02+01:00 |2016-11-01T04:53:02+01:00 |Hep B, adolescent or pediatric                     |08           |CVX                 |Hep B, adolescent or pediatric                     | 136|\n\n\n\n\n\n\n\nFinishing up\nWhen using duckdb it is very important to always close the database connection. If one is connected to the databas a wall is created to block anyone else from connecting at the same time. This prevents conflicts when more are manipulating the data at the same time.\n\n#close connection to the duckdb database\ncon_duckdb.close()"
  }
]